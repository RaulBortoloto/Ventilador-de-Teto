

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 09 18:14:19 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  00168A                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for main@F2391
    82  00168A  35                 	db	53
    83  00168B  2D                 	db	45
    84  00168C  54                 	db	84
    85  00168D  69                 	db	105
    86  00168E  6D                 	db	109
    87  00168F  65                 	db	101
    88  001690  72                 	db	114
    89  001691  20                 	db	32
    90  001692  35                 	db	53
    91  001693  20                 	db	32
    92  001694  6D                 	db	109
    93  001695  69                 	db	105
    94  001696  6E                 	db	110
    95  001697  0A                 	db	10
    96  001698  38                 	db	56
    97  001699  2D                 	db	45
    98  00169A  54                 	db	84
    99  00169B  69                 	db	105
   100  00169C  6D                 	db	109
   101  00169D  65                 	db	101
   102  00169E  72                 	db	114
   103  00169F  20                 	db	32
   104  0016A0  31                 	db	49
   105  0016A1  30                 	db	48
   106  0016A2  20                 	db	32
   107  0016A3  6D                 	db	109
   108  0016A4  69                 	db	105
   109  0016A5  6E                 	db	110
   110  0016A6  00                 	db	0
   111  0016A7  00                 	db	0
   112  0016A8  00                 	db	0
   113  0016A9  00                 	db	0
   114                           
   115                           ;initializer for main@F2389
   116  0016AA  31                 	db	49
   117  0016AB  2D                 	db	45
   118  0016AC  56                 	db	86
   119  0016AD  65                 	db	101
   120  0016AE  6E                 	db	110
   121  0016AF  74                 	db	116
   122  0016B0  2E                 	db	46
   123  0016B1  20                 	db	32
   124  0016B2  4F                 	db	79
   125  0016B3  4E                 	db	78
   126  0016B4  2F                 	db	47
   127  0016B5  4F                 	db	79
   128  0016B6  46                 	db	70
   129  0016B7  46                 	db	70
   130  0016B8  0A                 	db	10
   131  0016B9  32                 	db	50
   132  0016BA  2D                 	db	45
   133  0016BB  4D                 	db	77
   134  0016BC  75                 	db	117
   135  0016BD  64                 	db	100
   136  0016BE  61                 	db	97
   137  0016BF  72                 	db	114
   138  0016C0  20                 	db	32
   139  0016C1  56                 	db	86
   140  0016C2  65                 	db	101
   141  0016C3  6C                 	db	108
   142  0016C4  6F                 	db	111
   143  0016C5  63                 	db	99
   144  0016C6  2E                 	db	46
   145  0016C7  00                 	db	0
   146  0016C8  00                 	db	0
   147  0016C9  00                 	db	0
   148                           
   149                           	psect	idataBANK1
   150  001712                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for main@F2393
   154  001712  30                 	db	48
   155  001713  2D                 	db	45
   156  001714  54                 	db	84
   157  001715  69                 	db	105
   158  001716  6D                 	db	109
   159  001717  65                 	db	101
   160  001718  72                 	db	114
   161  001719  20                 	db	32
   162  00171A  33                 	db	51
   163  00171B  30                 	db	48
   164  00171C  20                 	db	32
   165  00171D  6D                 	db	109
   166  00171E  69                 	db	105
   167  00171F  6E                 	db	110
   168  001720  00                 	db	0
   169  001721  00                 	db	0
   170  001722  00                 	db	0
   171  001723  00                 	db	0
   172  001724  00                 	db	0
   173  001725  00                 	db	0
   174  001726  00                 	db	0
   175  001727  00                 	db	0
   176  001728  00                 	db	0
   177  001729  00                 	db	0
   178  00172A  00                 	db	0
   179  00172B  00                 	db	0
   180  00172C  00                 	db	0
   181  00172D  00                 	db	0
   182  00172E  00                 	db	0
   183  00172F  00                 	db	0
   184  001730  00                 	db	0
   185  001731  00                 	db	0
   186                           
   187                           	psect	smallconst
   188  000600                     __psmallconst:
   189                           	callstack 0
   190  000600  00                 	db	0
   191  000601                     _valor@ssd$F244:
   192                           	callstack 0
   193  000601  3F                 	db	63
   194  000602  06                 	db	6
   195  000603  5B                 	db	91
   196  000604  4F                 	db	79
   197  000605  66                 	db	102
   198  000606  6D                 	db	109
   199  000607  7D                 	db	125
   200  000608  07                 	db	7
   201  000609  7F                 	db	127
   202  00060A  6F                 	db	111
   203  00060B  77                 	db	119
   204  00060C  7C                 	db	124
   205  00060D  39                 	db	57
   206  00060E  5E                 	db	94
   207  00060F  79                 	db	121
   208  000610  71                 	db	113
   209  000611                     __end_of_valor@ssd$F244:
   210                           	callstack 0
   211  0000                     _T2CON	set	4042
   212  0000                     _CCP2CON	set	4026
   213  0000                     _CCPR2L	set	4027
   214  0000                     _CCP1CON	set	4029
   215  0000                     _CCPR1L	set	4030
   216  0000                     _PR2	set	4043
   217  0000                     _T0CON	set	4053
   218  0000                     _TMR0L	set	4054
   219  0000                     _TMR0H	set	4055
   220  0000                     _INTCON	set	4082
   221  0000                     _TRISE	set	3990
   222  0000                     _TRISD	set	3989
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISB	set	3987
   225  0000                     _TRISA	set	3986
   226  0000                     _PORTE	set	3972
   227  0000                     _PORTD	set	3971
   228  0000                     _PORTC	set	3970
   229  0000                     _PORTB	set	3969
   230  0000                     _PORTA	set	3968
   231  000611  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           ; #config settings
   234                           
   235                           	psect	cinit
   236  00158A                     __pcinit:
   237                           	callstack 0
   238  00158A                     start_initialization:
   239                           	callstack 0
   240  00158A                     __initialization:
   241                           	callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK1 (32 bytes)
   244                           ; load TBLPTR registers with __pidataBANK1
   245  00158A  0E12               	movlw	low __pidataBANK1
   246  00158C  6EF6               	movwf	tblptrl,c
   247  00158E  0E17               	movlw	high __pidataBANK1
   248  001590  6EF7               	movwf	tblptrh,c
   249  001592  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   250  001594  6EF8               	movwf	tblptru,c
   251  001596  EE01  F000         	lfsr	0,__pdataBANK1
   252  00159A  EE10 F020          	lfsr	1,32
   253  00159E                     copy_data0:
   254  00159E  0009               	tblrd		*+
   255  0015A0  CFF5 FFEE          	movff	tablat,postinc0
   256  0015A4  50E5               	movf	postdec1,w,c
   257  0015A6  50E1               	movf	fsr1l,w,c
   258  0015A8  E1FA               	bnz	copy_data0
   259                           
   260                           ; Initialize objects allocated to COMRAM (64 bytes)
   261                           ; load TBLPTR registers with __pidataCOMRAM
   262  0015AA  0E8A               	movlw	low __pidataCOMRAM
   263  0015AC  6EF6               	movwf	tblptrl,c
   264  0015AE  0E16               	movlw	high __pidataCOMRAM
   265  0015B0  6EF7               	movwf	tblptrh,c
   266  0015B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   267  0015B4  6EF8               	movwf	tblptru,c
   268  0015B6  EE00  F001         	lfsr	0,__pdataCOMRAM
   269  0015BA  EE10 F040          	lfsr	1,64
   270  0015BE                     copy_data1:
   271  0015BE  0009               	tblrd		*+
   272  0015C0  CFF5 FFEE          	movff	tablat,postinc0
   273  0015C4  50E5               	movf	postdec1,w,c
   274  0015C6  50E1               	movf	fsr1l,w,c
   275  0015C8  E1FA               	bnz	copy_data1
   276                           
   277                           ; Clear objects allocated to COMRAM (12 bytes)
   278  0015CA  EE00  F05B         	lfsr	0,__pbssCOMRAM
   279  0015CE  0E0C               	movlw	12
   280  0015D0                     clear_0:
   281  0015D0  6AEE               	clrf	postinc0,c
   282  0015D2  06E8               	decf	wreg,f,c
   283  0015D4  E1FD               	bnz	clear_0
   284  0015D6                     end_of_initialization:
   285                           	callstack 0
   286  0015D6                     __end_of__initialization:
   287                           	callstack 0
   288  0015D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  0015D8  6EF8               	movwf	tblptru,c
   290  0015DA  0100               	movlb	0
   291  0015DC  EF09  F003         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294  00005B                     __pbssCOMRAM:
   295                           	callstack 0
   296  00005B                     kpDebounce@valorAntigo:
   297                           	callstack 0
   298  00005B                     	ds	2
   299  00005D                     kpDebounce@valorNovo:
   300                           	callstack 0
   301  00005D                     	ds	2
   302  00005F                     _valor:
   303                           	callstack 0
   304  00005F                     	ds	2
   305  000061                     _v3:
   306                           	callstack 0
   307  000061                     	ds	1
   308  000062                     _v2:
   309                           	callstack 0
   310  000062                     	ds	1
   311  000063                     _v1:
   312                           	callstack 0
   313  000063                     	ds	1
   314  000064                     _v0:
   315                           	callstack 0
   316  000064                     	ds	1
   317  000065                     _display:
   318                           	callstack 0
   319  000065                     	ds	1
   320  000066                     kpDebounce@tempo:
   321                           	callstack 0
   322  000066                     	ds	1
   323                           
   324                           	psect	dataCOMRAM
   325  000001                     __pdataCOMRAM:
   326                           	callstack 0
   327  000001                     main@F2391:
   328                           	callstack 0
   329  000001                     	ds	32
   330  000021                     main@F2389:
   331                           	callstack 0
   332  000021                     	ds	32
   333                           
   334                           	psect	dataBANK1
   335  000100                     __pdataBANK1:
   336                           	callstack 0
   337  000100                     main@F2393:
   338                           	callstack 0
   339  000100                     	ds	32
   340                           
   341                           	psect	cstackBANK0
   342  000080                     __pcstackBANK0:
   343                           	callstack 0
   344  000080                     main@Tela1:
   345                           	callstack 0
   346                           
   347                           ; 32 bytes @ 0x0
   348  000080                     	ds	32
   349  0000A0                     main@Tela2:
   350                           	callstack 0
   351                           
   352                           ; 32 bytes @ 0x20
   353  0000A0                     	ds	32
   354  0000C0                     main@Tela3:
   355                           	callstack 0
   356                           
   357                           ; 32 bytes @ 0x40
   358  0000C0                     	ds	33
   359  0000E1                     main@EstadoLuminaria:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x61
   363  0000E1                     	ds	1
   364  0000E2                     main@temp:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x62
   368  0000E2                     	ds	1
   369  0000E3                     main@EstadoTimer:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x63
   373  0000E3                     	ds	1
   374  0000E4                     main@EstadoVentoinha:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x64
   378  0000E4                     	ds	1
   379  0000E5                     main@VelocidadeVentoinha:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x65
   383  0000E5                     	ds	1
   384  0000E6                     main@timerSSD:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x66
   388  0000E6                     	ds	4
   389  0000EA                     main@tecla:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x6A
   393  0000EA                     	ds	1
   394  0000EB                     main@i:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x6B
   398  0000EB                     	ds	1
   399                           
   400                           	psect	cstackCOMRAM
   401  000041                     __pcstackCOMRAM:
   402                           	callstack 0
   403  000041                     ??_kpDebounce:
   404  000041                     ?_kpRead:
   405                           	callstack 0
   406  000041                     ?___wmul:
   407                           	callstack 0
   408  000041                     ?___lwdiv:
   409                           	callstack 0
   410  000041                     ?___lldiv:
   411                           	callstack 0
   412  000041                     Delay40us@i:
   413                           	callstack 0
   414  000041                     digitalWrite@pin:
   415                           	callstack 0
   416  000041                     pinMode@pin:
   417                           	callstack 0
   418  000041                     timerReset@tempo:
   419                           	callstack 0
   420  000041                     ___wmul@multiplier:
   421                           	callstack 0
   422  000041                     ___lwdiv@dividend:
   423                           	callstack 0
   424  000041                     ___lldiv@dividend:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x0
   428  000041                     	ds	1
   429  000042                     Delay2ms@i:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1
   433  000042                     	ds	1
   434  000043                     digitalWrite@value:
   435                           	callstack 0
   436  000043                     pinMode@type:
   437                           	callstack 0
   438  000043                     timerReset@ciclos:
   439                           	callstack 0
   440  000043                     ___wmul@multiplicand:
   441                           	callstack 0
   442  000043                     ___lwdiv@divisor:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  000043                     	ds	2
   447  000045                     ??_digitalWrite:
   448  000045                     ??_pinMode:
   449  000045                     ___wmul@product:
   450                           	callstack 0
   451  000045                     ___lwdiv@quotient:
   452                           	callstack 0
   453  000045                     ___lldiv@divisor:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x4
   457  000045                     	ds	1
   458  000046                     kpDebounce@old_D:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x5
   462  000046                     	ds	1
   463  000047                     ??_ssdUpdate:
   464  000047                     lcdCommand@old_D:
   465                           	callstack 0
   466  000047                     lcdData@valor:
   467                           	callstack 0
   468  000047                     ___lwdiv@counter:
   469                           	callstack 0
   470  000047                     kpDebounce@k:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x6
   474  000047                     	ds	1
   475  000048                     ??_pwmSet1:
   476  000048                     lcdCommand@cmd:
   477                           	callstack 0
   478  000048                     lcdData@old_D:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x7
   482  000048                     	ds	1
   483  000049                     kpDebounce@j:
   484                           	callstack 0
   485  000049                     ___lldiv@quotient:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x8
   489  000049                     	ds	1
   490  00004A                     kpDebounce@i:
   491                           	callstack 0
   492  00004A                     pwmSet1@porcento:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x9
   496  00004A                     	ds	1
   497  00004B                     pwmSet1@val:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xA
   501  00004B                     	ds	2
   502  00004D                     ___lldiv@counter:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xC
   506  00004D                     	ds	1
   507  00004E                     ?___llmod:
   508                           	callstack 0
   509  00004E                     ___llmod@dividend:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0xD
   513  00004E                     	ds	4
   514  000052                     ___llmod@divisor:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x11
   518  000052                     	ds	4
   519  000056                     ___llmod@counter:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x15
   523  000056                     	ds	1
   524  000057                     ssdDigit@pos:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x16
   528  000057                     	ds	1
   529  000058                     ssdDigit@val:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x17
   533  000058                     	ds	1
   534  000059                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x18
   537  000059                     	ds	2
   538                           
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 10 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  Tela3          32   64[BANK0 ] unsigned char [32]
   549 ;;  Tela2          32   32[BANK0 ] unsigned char [32]
   550 ;;  Tela1          32    0[BANK0 ] unsigned char [32]
   551 ;;  timerSSD        4  102[BANK0 ] unsigned long 
   552 ;;  i               1  107[BANK0 ] unsigned char 
   553 ;;  tecla           1  106[BANK0 ] unsigned char 
   554 ;;  VelocidadeVe    1  101[BANK0 ] unsigned char 
   555 ;;  EstadoVentoi    1  100[BANK0 ] unsigned char 
   556 ;;  EstadoTimer     1   99[BANK0 ] unsigned char 
   557 ;;  temp            1   98[BANK0 ] unsigned char 
   558 ;;  EstadoLumina    1   97[BANK0 ] unsigned char 
   559 ;;  Tela            1    0        unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   569 ;;      Params:         0       0       0       0       0       0       0
   570 ;;      Locals:         0     108       0       0       0       0       0
   571 ;;      Temps:          2       0       0       0       0       0       0
   572 ;;      Totals:         2     108       0       0       0       0       0
   573 ;;Total ram usage:      110 bytes
   574 ;; Hardware stack levels required when called:    4
   575 ;; This function calls:
   576 ;;		___lldiv
   577 ;;		___llmod
   578 ;;		_kpDebounce
   579 ;;		_kpInit
   580 ;;		_kpRead
   581 ;;		_lcdCommand
   582 ;;		_lcdData
   583 ;;		_lcdInit
   584 ;;		_pwmInit
   585 ;;		_pwmSet1
   586 ;;		_ssdDigit
   587 ;;		_ssdInit
   588 ;;		_ssdUpdate
   589 ;;		_timerInit
   590 ;;		_timerReset
   591 ;;		_timerWait
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text0
   598  000612                     __ptext0:
   599                           	callstack 0
   600  000612                     _main:
   601                           	callstack 27
   602  000612  0E01               	movlw	1
   603  000614  0100               	movlb	0	; () banked
   604  000616  6FE5               	movwf	main@VelocidadeVentoinha& (0+255),b
   605                           
   606                           ;main.c: 13:     unsigned char EstadoVentoinha = 0, EstadoTimer = 0, EstadoLuminaria = 0
      +                          ;
   607  000618  0E00               	movlw	0
   608  00061A  6FE4               	movwf	main@EstadoVentoinha& (0+255),b
   609  00061C  0E00               	movlw	0
   610  00061E  6FE3               	movwf	main@EstadoTimer& (0+255),b
   611  000620  0E00               	movlw	0
   612  000622  6FE1               	movwf	main@EstadoLuminaria& (0+255),b
   613                           
   614                           ;main.c: 14:     unsigned long timerSSD = 0;
   615  000624  0E00               	movlw	0
   616  000626  6FE6               	movwf	main@timerSSD& (0+255),b
   617  000628  0E00               	movlw	0
   618  00062A  6FE7               	movwf	(main@timerSSD+1)& (0+255),b
   619  00062C  0E00               	movlw	0
   620  00062E  6FE8               	movwf	(main@timerSSD+2)& (0+255),b
   621  000630  0E00               	movlw	0
   622  000632  6FE9               	movwf	(main@timerSSD+3)& (0+255),b
   623  000634                     
   624                           ; BSR set to: 0
   625                           ;main.c: 16:     lcdInit();
   626  000634  ECED  F009         	call	_lcdInit	;wreg free
   627  000638                     
   628                           ;main.c: 17:     kpInit();
   629  000638  ECCA  F00B         	call	_kpInit	;wreg free
   630  00063C                     
   631                           ;main.c: 18:     pwmInit();
   632  00063C  ECB3  F00B         	call	_pwmInit	;wreg free
   633  000640                     
   634                           ;main.c: 19:     ssdInit();
   635  000640  ECF0  F00A         	call	_ssdInit	;wreg free
   636  000644                     
   637                           ;main.c: 20:     timerInit();
   638  000644  ECCF  F00B         	call	_timerInit	;wreg free
   639  000648                     l2018:
   640                           
   641                           ;main.c: 23:         timerReset(10000);
   642  000648  0E27               	movlw	39
   643  00064A  6E42               	movwf	(timerReset@tempo+1)^0,c
   644  00064C  0E10               	movlw	16
   645  00064E  6E41               	movwf	timerReset@tempo^0,c
   646  000650  EC78  F00B         	call	_timerReset	;wreg free
   647  000654                     
   648                           ;main.c: 24:         kpDebounce();
   649  000654  ECB3  F007         	call	_kpDebounce	;wreg free
   650  000658                     
   651                           ;main.c: 26:         if (EstadoTimer == 1) {
   652  000658  0100               	movlb	0	; () banked
   653  00065A  05E3               	decf	main@EstadoTimer& (0+255),w,b
   654  00065C  A4D8               	btfss	status,2,c
   655  00065E  EF33  F003         	goto	u1731
   656  000662  EF35  F003         	goto	u1730
   657  000666                     u1731:
   658  000666  EFF2  F003         	goto	l2042
   659  00066A                     u1730:
   660  00066A                     
   661                           ; BSR set to: 0
   662                           ;main.c: 27:             ssdUpdate();
   663  00066A  EC70  F008         	call	_ssdUpdate	;wreg free
   664  00066E                     
   665                           ;main.c: 28:             ssdDigit(((timerSSD / 60000) % 6), 0);
   666  00066E  0E00               	movlw	0
   667  000670  6E57               	movwf	ssdDigit@pos^0,c
   668  000672  0E60               	movlw	96
   669  000674  6E45               	movwf	___lldiv@divisor^0,c
   670  000676  0EEA               	movlw	234
   671  000678  6E46               	movwf	(___lldiv@divisor+1)^0,c
   672  00067A  0E00               	movlw	0
   673  00067C  6E47               	movwf	(___lldiv@divisor+2)^0,c
   674  00067E  0E00               	movlw	0
   675  000680  6E48               	movwf	(___lldiv@divisor+3)^0,c
   676  000682  C0E6  F041         	movff	main@timerSSD,___lldiv@dividend
   677  000686  C0E7  F042         	movff	main@timerSSD+1,___lldiv@dividend+1
   678  00068A  C0E8  F043         	movff	main@timerSSD+2,___lldiv@dividend+2
   679  00068E  C0E9  F044         	movff	main@timerSSD+3,___lldiv@dividend+3
   680  000692  EC18  F009         	call	___lldiv	;wreg free
   681  000696  C041  F04E         	movff	?___lldiv,___llmod@dividend
   682  00069A  C042  F04F         	movff	?___lldiv+1,___llmod@dividend+1
   683  00069E  C043  F050         	movff	?___lldiv+2,___llmod@dividend+2
   684  0006A2  C044  F051         	movff	?___lldiv+3,___llmod@dividend+3
   685  0006A6  0E06               	movlw	6
   686  0006A8  6E52               	movwf	___llmod@divisor^0,c
   687  0006AA  0E00               	movlw	0
   688  0006AC  6E53               	movwf	(___llmod@divisor+1)^0,c
   689  0006AE  0E00               	movlw	0
   690  0006B0  6E54               	movwf	(___llmod@divisor+2)^0,c
   691  0006B2  0E00               	movlw	0
   692  0006B4  6E55               	movwf	(___llmod@divisor+3)^0,c
   693  0006B6  EC6A  F009         	call	___llmod	;wreg free
   694  0006BA  504E               	movf	?___llmod^0,w,c
   695  0006BC  EC99  F00A         	call	_ssdDigit
   696  0006C0                     
   697                           ;main.c: 29:             ssdDigit(((timerSSD / 6000) % 10), 1);
   698  0006C0  0E01               	movlw	1
   699  0006C2  6E57               	movwf	ssdDigit@pos^0,c
   700  0006C4  0E70               	movlw	112
   701  0006C6  6E45               	movwf	___lldiv@divisor^0,c
   702  0006C8  0E17               	movlw	23
   703  0006CA  6E46               	movwf	(___lldiv@divisor+1)^0,c
   704  0006CC  0E00               	movlw	0
   705  0006CE  6E47               	movwf	(___lldiv@divisor+2)^0,c
   706  0006D0  0E00               	movlw	0
   707  0006D2  6E48               	movwf	(___lldiv@divisor+3)^0,c
   708  0006D4  C0E6  F041         	movff	main@timerSSD,___lldiv@dividend
   709  0006D8  C0E7  F042         	movff	main@timerSSD+1,___lldiv@dividend+1
   710  0006DC  C0E8  F043         	movff	main@timerSSD+2,___lldiv@dividend+2
   711  0006E0  C0E9  F044         	movff	main@timerSSD+3,___lldiv@dividend+3
   712  0006E4  EC18  F009         	call	___lldiv	;wreg free
   713  0006E8  C041  F04E         	movff	?___lldiv,___llmod@dividend
   714  0006EC  C042  F04F         	movff	?___lldiv+1,___llmod@dividend+1
   715  0006F0  C043  F050         	movff	?___lldiv+2,___llmod@dividend+2
   716  0006F4  C044  F051         	movff	?___lldiv+3,___llmod@dividend+3
   717  0006F8  0E0A               	movlw	10
   718  0006FA  6E52               	movwf	___llmod@divisor^0,c
   719  0006FC  0E00               	movlw	0
   720  0006FE  6E53               	movwf	(___llmod@divisor+1)^0,c
   721  000700  0E00               	movlw	0
   722  000702  6E54               	movwf	(___llmod@divisor+2)^0,c
   723  000704  0E00               	movlw	0
   724  000706  6E55               	movwf	(___llmod@divisor+3)^0,c
   725  000708  EC6A  F009         	call	___llmod	;wreg free
   726  00070C  504E               	movf	?___llmod^0,w,c
   727  00070E  EC99  F00A         	call	_ssdDigit
   728  000712                     
   729                           ;main.c: 30:             ssdDigit(((timerSSD / 1000) % 6), 2);
   730  000712  0E02               	movlw	2
   731  000714  6E57               	movwf	ssdDigit@pos^0,c
   732  000716  0EE8               	movlw	232
   733  000718  6E45               	movwf	___lldiv@divisor^0,c
   734  00071A  0E03               	movlw	3
   735  00071C  6E46               	movwf	(___lldiv@divisor+1)^0,c
   736  00071E  0E00               	movlw	0
   737  000720  6E47               	movwf	(___lldiv@divisor+2)^0,c
   738  000722  0E00               	movlw	0
   739  000724  6E48               	movwf	(___lldiv@divisor+3)^0,c
   740  000726  C0E6  F041         	movff	main@timerSSD,___lldiv@dividend
   741  00072A  C0E7  F042         	movff	main@timerSSD+1,___lldiv@dividend+1
   742  00072E  C0E8  F043         	movff	main@timerSSD+2,___lldiv@dividend+2
   743  000732  C0E9  F044         	movff	main@timerSSD+3,___lldiv@dividend+3
   744  000736  EC18  F009         	call	___lldiv	;wreg free
   745  00073A  C041  F04E         	movff	?___lldiv,___llmod@dividend
   746  00073E  C042  F04F         	movff	?___lldiv+1,___llmod@dividend+1
   747  000742  C043  F050         	movff	?___lldiv+2,___llmod@dividend+2
   748  000746  C044  F051         	movff	?___lldiv+3,___llmod@dividend+3
   749  00074A  0E06               	movlw	6
   750  00074C  6E52               	movwf	___llmod@divisor^0,c
   751  00074E  0E00               	movlw	0
   752  000750  6E53               	movwf	(___llmod@divisor+1)^0,c
   753  000752  0E00               	movlw	0
   754  000754  6E54               	movwf	(___llmod@divisor+2)^0,c
   755  000756  0E00               	movlw	0
   756  000758  6E55               	movwf	(___llmod@divisor+3)^0,c
   757  00075A  EC6A  F009         	call	___llmod	;wreg free
   758  00075E  504E               	movf	?___llmod^0,w,c
   759  000760  EC99  F00A         	call	_ssdDigit
   760  000764                     
   761                           ;main.c: 31:             ssdDigit(((timerSSD / 100) % 10), 3);
   762  000764  0E03               	movlw	3
   763  000766  6E57               	movwf	ssdDigit@pos^0,c
   764  000768  0E64               	movlw	100
   765  00076A  6E45               	movwf	___lldiv@divisor^0,c
   766  00076C  0E00               	movlw	0
   767  00076E  6E46               	movwf	(___lldiv@divisor+1)^0,c
   768  000770  0E00               	movlw	0
   769  000772  6E47               	movwf	(___lldiv@divisor+2)^0,c
   770  000774  0E00               	movlw	0
   771  000776  6E48               	movwf	(___lldiv@divisor+3)^0,c
   772  000778  C0E6  F041         	movff	main@timerSSD,___lldiv@dividend
   773  00077C  C0E7  F042         	movff	main@timerSSD+1,___lldiv@dividend+1
   774  000780  C0E8  F043         	movff	main@timerSSD+2,___lldiv@dividend+2
   775  000784  C0E9  F044         	movff	main@timerSSD+3,___lldiv@dividend+3
   776  000788  EC18  F009         	call	___lldiv	;wreg free
   777  00078C  C041  F04E         	movff	?___lldiv,___llmod@dividend
   778  000790  C042  F04F         	movff	?___lldiv+1,___llmod@dividend+1
   779  000794  C043  F050         	movff	?___lldiv+2,___llmod@dividend+2
   780  000798  C044  F051         	movff	?___lldiv+3,___llmod@dividend+3
   781  00079C  0E0A               	movlw	10
   782  00079E  6E52               	movwf	___llmod@divisor^0,c
   783  0007A0  0E00               	movlw	0
   784  0007A2  6E53               	movwf	(___llmod@divisor+1)^0,c
   785  0007A4  0E00               	movlw	0
   786  0007A6  6E54               	movwf	(___llmod@divisor+2)^0,c
   787  0007A8  0E00               	movlw	0
   788  0007AA  6E55               	movwf	(___llmod@divisor+3)^0,c
   789  0007AC  EC6A  F009         	call	___llmod	;wreg free
   790  0007B0  504E               	movf	?___llmod^0,w,c
   791  0007B2  EC99  F00A         	call	_ssdDigit
   792  0007B6                     
   793                           ;main.c: 32:             timerSSD--;
   794  0007B6  0100               	movlb	0	; () banked
   795  0007B8  07E6               	decf	main@timerSSD& (0+255),f,b
   796  0007BA  0E00               	movlw	0
   797  0007BC  5BE7               	subwfb	(main@timerSSD+1)& (0+255),f,b
   798  0007BE  5BE8               	subwfb	(main@timerSSD+2)& (0+255),f,b
   799  0007C0  5BE9               	subwfb	(main@timerSSD+3)& (0+255),f,b
   800  0007C2                     
   801                           ; BSR set to: 0
   802                           ;main.c: 34:             if (timerSSD == 0) {
   803  0007C2  51E6               	movf	main@timerSSD& (0+255),w,b
   804  0007C4  11E7               	iorwf	(main@timerSSD+1)& (0+255),w,b
   805  0007C6  11E8               	iorwf	(main@timerSSD+2)& (0+255),w,b
   806  0007C8  11E9               	iorwf	(main@timerSSD+3)& (0+255),w,b
   807  0007CA  A4D8               	btfss	status,2,c
   808  0007CC  EFEA  F003         	goto	u1741
   809  0007D0  EFEC  F003         	goto	u1740
   810  0007D4                     u1741:
   811  0007D4  EFF2  F003         	goto	l2042
   812  0007D8                     u1740:
   813  0007D8                     
   814                           ; BSR set to: 0
   815                           ;main.c: 35:                 pwmSet1(0);
   816  0007D8  0E00               	movlw	0
   817  0007DA  EC63  F00A         	call	_pwmSet1
   818  0007DE                     
   819                           ;main.c: 36:                 EstadoTimer = 0;
   820  0007DE  0E00               	movlw	0
   821  0007E0  0100               	movlb	0	; () banked
   822  0007E2  6FE3               	movwf	main@EstadoTimer& (0+255),b
   823  0007E4                     l2042:
   824                           
   825                           ; BSR set to: 0
   826                           ;main.c: 40:         if (temp != kpRead()) {
   827  0007E4  ECC5  F00B         	call	_kpRead	;wreg free
   828  0007E8  0100               	movlb	0	; () banked
   829  0007EA  51E2               	movf	main@temp& (0+255),w,b
   830  0007EC  6E59               	movwf	??_main^0,c
   831  0007EE  6A5A               	clrf	(??_main+1)^0,c
   832  0007F0  5041               	movf	?_kpRead^0,w,c
   833  0007F2  1859               	xorwf	??_main^0,w,c
   834  0007F4  E109               	bnz	u1750
   835  0007F6  5042               	movf	(?_kpRead+1)^0,w,c
   836  0007F8  185A               	xorwf	(??_main+1)^0,w,c
   837  0007FA  B4D8               	btfsc	status,2,c
   838  0007FC  EF02  F004         	goto	u1751
   839  000800  EF04  F004         	goto	u1750
   840  000804                     u1751:
   841  000804  EF5F  F005         	goto	l2164
   842  000808                     u1750:
   843  000808                     
   844                           ; BSR set to: 0
   845                           ;main.c: 41:             temp = kpRead();
   846  000808  ECC5  F00B         	call	_kpRead	;wreg free
   847  00080C  5041               	movf	?_kpRead^0,w,c
   848  00080E  0100               	movlb	0	; () banked
   849  000810  6FE2               	movwf	main@temp& (0+255),b
   850                           
   851                           ;main.c: 42:             tecla = kpRead();
   852  000812  ECC5  F00B         	call	_kpRead	;wreg free
   853  000816  5041               	movf	?_kpRead^0,w,c
   854  000818  0100               	movlb	0	; () banked
   855  00081A  6FEA               	movwf	main@tecla& (0+255),b
   856  00081C                     
   857                           ; BSR set to: 0
   858                           ;main.c: 44:             if (((tecla) & (1<<(3)))) {
   859  00081C  A7EA               	btfss	main@tecla& (0+255),3,b
   860  00081E  EF13  F004         	goto	u1761
   861  000822  EF15  F004         	goto	u1760
   862  000826                     u1761:
   863  000826  EF31  F004         	goto	l2060
   864  00082A                     u1760:
   865  00082A                     
   866                           ; BSR set to: 0
   867                           ;main.c: 45:                 if ((EstadoVentoinha % 2) == 0) {
   868  00082A  B1E4               	btfsc	main@EstadoVentoinha& (0+255),0,b
   869  00082C  EF1A  F004         	goto	u1771
   870  000830  EF1C  F004         	goto	u1770
   871  000834                     u1771:
   872  000834  EF24  F004         	goto	l38
   873  000838                     u1770:
   874  000838                     
   875                           ; BSR set to: 0
   876                           ;main.c: 46:                     pwmSet1(32);
   877  000838  0E20               	movlw	32
   878  00083A  EC63  F00A         	call	_pwmSet1
   879  00083E                     l2052:
   880                           
   881                           ;main.c: 47:                     VelocidadeVentoinha = 1;
   882  00083E  0E01               	movlw	1
   883  000840  0100               	movlb	0	; () banked
   884  000842  6FE5               	movwf	main@VelocidadeVentoinha& (0+255),b
   885                           
   886                           ;main.c: 48:                 } else if ((EstadoVentoinha % 2) != 0) {
   887  000844  EF30  F004         	goto	l2058
   888  000848                     l38:
   889                           
   890                           ; BSR set to: 0
   891  000848  A1E4               	btfss	main@EstadoVentoinha& (0+255),0,b
   892  00084A  EF29  F004         	goto	u1781
   893  00084E  EF2B  F004         	goto	u1780
   894  000852                     u1781:
   895  000852  EF30  F004         	goto	l2058
   896  000856                     u1780:
   897  000856                     
   898                           ; BSR set to: 0
   899                           ;main.c: 49:                     pwmSet1(0);
   900  000856  0E00               	movlw	0
   901  000858  EC63  F00A         	call	_pwmSet1
   902  00085C  EF1F  F004         	goto	l2052
   903  000860                     l2058:
   904                           
   905                           ; BSR set to: 0
   906                           ;main.c: 52:                 EstadoVentoinha++;
   907  000860  2BE4               	incf	main@EstadoVentoinha& (0+255),f,b
   908  000862                     l2060:
   909                           
   910                           ; BSR set to: 0
   911                           ;main.c: 55:             if (((tecla) & (1<<(7)))) {
   912  000862  AFEA               	btfss	main@tecla& (0+255),7,b
   913  000864  EF36  F004         	goto	u1791
   914  000868  EF38  F004         	goto	u1790
   915  00086C                     u1791:
   916  00086C  EF75  F004         	goto	l2090
   917  000870                     u1790:
   918  000870                     
   919                           ; BSR set to: 0
   920                           ;main.c: 56:                 if (VelocidadeVentoinha == 1) {
   921  000870  05E5               	decf	main@VelocidadeVentoinha& (0+255),w,b
   922  000872  A4D8               	btfss	status,2,c
   923  000874  EF3E  F004         	goto	u1801
   924  000878  EF40  F004         	goto	u1800
   925  00087C                     u1801:
   926  00087C  EF4C  F004         	goto	l2072
   927  000880                     u1800:
   928  000880                     
   929                           ; BSR set to: 0
   930                           ;main.c: 57:                     EstadoVentoinha = 1;
   931  000880  0E01               	movlw	1
   932  000882  6FE4               	movwf	main@EstadoVentoinha& (0+255),b
   933  000884                     
   934                           ; BSR set to: 0
   935                           ;main.c: 58:                     pwmSet1(0);
   936  000884  0E00               	movlw	0
   937  000886  EC63  F00A         	call	_pwmSet1
   938  00088A                     
   939                           ;main.c: 59:                     pwmSet1(32);
   940  00088A  0E20               	movlw	32
   941  00088C  EC63  F00A         	call	_pwmSet1
   942  000890                     l2070:
   943                           
   944                           ;main.c: 60:                     VelocidadeVentoinha++;
   945  000890  0100               	movlb	0	; () banked
   946  000892  2BE5               	incf	main@VelocidadeVentoinha& (0+255),f,b
   947                           
   948                           ;main.c: 61:                 } else if (VelocidadeVentoinha == 2) {
   949  000894  EF75  F004         	goto	l2090
   950  000898                     l2072:
   951                           
   952                           ; BSR set to: 0
   953  000898  0E02               	movlw	2
   954  00089A  19E5               	xorwf	main@VelocidadeVentoinha& (0+255),w,b
   955  00089C  A4D8               	btfss	status,2,c
   956  00089E  EF53  F004         	goto	u1811
   957  0008A2  EF55  F004         	goto	u1810
   958  0008A6                     u1811:
   959  0008A6  EF5F  F004         	goto	l2082
   960  0008AA                     u1810:
   961  0008AA                     
   962                           ; BSR set to: 0
   963                           ;main.c: 62:                     EstadoVentoinha = 1;
   964  0008AA  0E01               	movlw	1
   965  0008AC  6FE4               	movwf	main@EstadoVentoinha& (0+255),b
   966  0008AE                     
   967                           ; BSR set to: 0
   968                           ;main.c: 63:                     pwmSet1(0);
   969  0008AE  0E00               	movlw	0
   970  0008B0  EC63  F00A         	call	_pwmSet1
   971  0008B4                     
   972                           ;main.c: 64:                     pwmSet1(64);
   973  0008B4  0E40               	movlw	64
   974  0008B6  EC63  F00A         	call	_pwmSet1
   975  0008BA  EF48  F004         	goto	l2070
   976  0008BE                     l2082:
   977                           
   978                           ; BSR set to: 0
   979  0008BE  0E03               	movlw	3
   980  0008C0  19E5               	xorwf	main@VelocidadeVentoinha& (0+255),w,b
   981  0008C2  A4D8               	btfss	status,2,c
   982  0008C4  EF66  F004         	goto	u1821
   983  0008C8  EF68  F004         	goto	u1820
   984  0008CC                     u1821:
   985  0008CC  EF75  F004         	goto	l43
   986  0008D0                     u1820:
   987  0008D0                     
   988                           ; BSR set to: 0
   989                           ;main.c: 67:                     EstadoVentoinha = 1;
   990  0008D0  0E01               	movlw	1
   991  0008D2  6FE4               	movwf	main@EstadoVentoinha& (0+255),b
   992  0008D4                     
   993                           ; BSR set to: 0
   994                           ;main.c: 68:                     pwmSet1(0);
   995  0008D4  0E00               	movlw	0
   996  0008D6  EC63  F00A         	call	_pwmSet1
   997  0008DA                     
   998                           ;main.c: 69:                     pwmSet1(96);
   999  0008DA  0E60               	movlw	96
  1000  0008DC  EC63  F00A         	call	_pwmSet1
  1001                           
  1002                           ;main.c: 70:                     VelocidadeVentoinha = 1;
  1003  0008E0  0E01               	movlw	1
  1004  0008E2  0100               	movlb	0	; () banked
  1005  0008E4  6FE5               	movwf	main@VelocidadeVentoinha& (0+255),b
  1006  0008E6  EF75  F004         	goto	l2090
  1007  0008EA                     l43:
  1008  0008EA                     l2090:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;main.c: 74:             if (((tecla) & (1<<(6)))) {
  1012  0008EA  ADEA               	btfss	main@tecla& (0+255),6,b
  1013  0008EC  EF7A  F004         	goto	u1831
  1014  0008F0  EF7C  F004         	goto	u1830
  1015  0008F4                     u1831:
  1016  0008F4  EF86  F004         	goto	l2094
  1017  0008F8                     u1830:
  1018  0008F8                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 75:                 EstadoTimer = 1;
  1021  0008F8  0E01               	movlw	1
  1022  0008FA  6FE3               	movwf	main@EstadoTimer& (0+255),b
  1023                           
  1024                           ;main.c: 76:                 timerSSD = 30000;
  1025  0008FC  0E30               	movlw	48
  1026  0008FE  6FE6               	movwf	main@timerSSD& (0+255),b
  1027  000900  0E75               	movlw	117
  1028  000902  6FE7               	movwf	(main@timerSSD+1)& (0+255),b
  1029  000904  0E00               	movlw	0
  1030  000906  6FE8               	movwf	(main@timerSSD+2)& (0+255),b
  1031  000908  0E00               	movlw	0
  1032  00090A  6FE9               	movwf	(main@timerSSD+3)& (0+255),b
  1033  00090C                     l2094:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;main.c: 78:             if (((tecla) & (1<<(5)))) {
  1037  00090C  ABEA               	btfss	main@tecla& (0+255),5,b
  1038  00090E  EF8B  F004         	goto	u1841
  1039  000912  EF8D  F004         	goto	u1840
  1040  000916                     u1841:
  1041  000916  EF97  F004         	goto	l2098
  1042  00091A                     u1840:
  1043  00091A                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 79:                 EstadoTimer = 1;
  1046  00091A  0E01               	movlw	1
  1047  00091C  6FE3               	movwf	main@EstadoTimer& (0+255),b
  1048                           
  1049                           ;main.c: 80:                 timerSSD = 60000;
  1050  00091E  0E60               	movlw	96
  1051  000920  6FE6               	movwf	main@timerSSD& (0+255),b
  1052  000922  0EEA               	movlw	234
  1053  000924  6FE7               	movwf	(main@timerSSD+1)& (0+255),b
  1054  000926  0E00               	movlw	0
  1055  000928  6FE8               	movwf	(main@timerSSD+2)& (0+255),b
  1056  00092A  0E00               	movlw	0
  1057  00092C  6FE9               	movwf	(main@timerSSD+3)& (0+255),b
  1058  00092E                     l2098:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;main.c: 82:             if (((tecla) & (1<<(4)))) {
  1062  00092E  A9EA               	btfss	main@tecla& (0+255),4,b
  1063  000930  EF9C  F004         	goto	u1851
  1064  000934  EF9E  F004         	goto	u1850
  1065  000938                     u1851:
  1066  000938  EFA8  F004         	goto	l2102
  1067  00093C                     u1850:
  1068  00093C                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 83:                 EstadoTimer = 1;
  1071  00093C  0E01               	movlw	1
  1072  00093E  6FE3               	movwf	main@EstadoTimer& (0+255),b
  1073                           
  1074                           ;main.c: 84:                 timerSSD = 180000;
  1075  000940  0E20               	movlw	32
  1076  000942  6FE6               	movwf	main@timerSSD& (0+255),b
  1077  000944  0EBF               	movlw	191
  1078  000946  6FE7               	movwf	(main@timerSSD+1)& (0+255),b
  1079  000948  0E02               	movlw	2
  1080  00094A  6FE8               	movwf	(main@timerSSD+2)& (0+255),b
  1081  00094C  0E00               	movlw	0
  1082  00094E  6FE9               	movwf	(main@timerSSD+3)& (0+255),b
  1083  000950                     l2102:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 87:             if (((tecla) & (1<<(2)))) {
  1087  000950  A5EA               	btfss	main@tecla& (0+255),2,b
  1088  000952  EFAD  F004         	goto	u1861
  1089  000956  EFAF  F004         	goto	u1860
  1090  00095A                     u1861:
  1091  00095A  EFE5  F004         	goto	l50
  1092  00095E                     u1860:
  1093  00095E                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 88:                 lcdCommand(0x01);
  1096  00095E  0E01               	movlw	1
  1097  000960  ECAE  F009         	call	_lcdCommand
  1098  000964                     
  1099                           ;main.c: 89:                 char Tela1[32] = "1-Vent. ON/OFF\n2-Mudar Veloc.";
  1100  000964  EE20  F021         	lfsr	2,main@F2389
  1101  000968  EE10  F080         	lfsr	1,main@Tela1
  1102  00096C  0E1F               	movlw	31
  1103  00096E                     u1871:
  1104  00096E  CFDB FFE3          	movff	plusw2,plusw1
  1105  000972  06E8               	decf	wreg,f,c
  1106  000974  E2FC               	bc	u1871
  1107  000976                     
  1108                           ;main.c: 90:                 for (i = 0; i < 32; i++) {
  1109  000976  0E00               	movlw	0
  1110  000978  0100               	movlb	0	; () banked
  1111  00097A  6FEB               	movwf	main@i& (0+255),b
  1112  00097C                     l2114:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;main.c: 91:                     if (Tela1[i] == '\n') {
  1116  00097C  0E80               	movlw	low main@Tela1
  1117  00097E  25EB               	addwf	main@i& (0+255),w,b
  1118  000980  6ED9               	movwf	fsr2l,c
  1119  000982  6ADA               	clrf	fsr2h,c
  1120  000984  0E00               	movlw	high main@Tela1
  1121  000986  22DA               	addwfc	fsr2h,f,c
  1122  000988  0E0A               	movlw	10
  1123  00098A  18DE               	xorwf	postinc2,w,c
  1124  00098C  A4D8               	btfss	status,2,c
  1125  00098E  EFCB  F004         	goto	u1881
  1126  000992  EFCD  F004         	goto	u1880
  1127  000996                     u1881:
  1128  000996  EFD2  F004         	goto	l2118
  1129  00099A                     u1880:
  1130  00099A                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 92:                         lcdCommand(0xC0);
  1133  00099A  0EC0               	movlw	192
  1134  00099C  ECAE  F009         	call	_lcdCommand
  1135                           
  1136                           ;main.c: 93:                         continue;
  1137  0009A0  EFDB  F004         	goto	l2120
  1138  0009A4                     l2118:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;main.c: 95:                     lcdData(Tela1[i]);
  1142  0009A4  0E80               	movlw	low main@Tela1
  1143  0009A6  25EB               	addwf	main@i& (0+255),w,b
  1144  0009A8  6ED9               	movwf	fsr2l,c
  1145  0009AA  6ADA               	clrf	fsr2h,c
  1146  0009AC  0E00               	movlw	high main@Tela1
  1147  0009AE  22DA               	addwfc	fsr2h,f,c
  1148  0009B0  50DF               	movf	indf2,w,c
  1149  0009B2  EC1B  F00B         	call	_lcdData
  1150  0009B6                     l2120:
  1151  0009B6  0100               	movlb	0	; () banked
  1152  0009B8  2BEB               	incf	main@i& (0+255),f,b
  1153  0009BA                     
  1154                           ; BSR set to: 0
  1155  0009BA  0E1F               	movlw	31
  1156  0009BC  65EB               	cpfsgt	main@i& (0+255),b
  1157  0009BE  EFE3  F004         	goto	u1891
  1158  0009C2  EFE5  F004         	goto	u1890
  1159  0009C6                     u1891:
  1160  0009C6  EFBE  F004         	goto	l2114
  1161  0009CA                     u1890:
  1162  0009CA                     l50:
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 98:             if (((tecla) & (1<<(1)))) {
  1166  0009CA  A3EA               	btfss	main@tecla& (0+255),1,b
  1167  0009CC  EFEA  F004         	goto	u1901
  1168  0009D0  EFEC  F004         	goto	u1900
  1169  0009D4                     u1901:
  1170  0009D4  EF22  F005         	goto	l57
  1171  0009D8                     u1900:
  1172  0009D8                     
  1173                           ; BSR set to: 0
  1174                           ;main.c: 99:                 lcdCommand(0x01);
  1175  0009D8  0E01               	movlw	1
  1176  0009DA  ECAE  F009         	call	_lcdCommand
  1177  0009DE                     
  1178                           ;main.c: 100:                 char Tela2[32] = "5-Timer 5 min\n8-Timer 10 min";
  1179  0009DE  EE20  F001         	lfsr	2,main@F2391
  1180  0009E2  EE10  F0A0         	lfsr	1,main@Tela2
  1181  0009E6  0E1F               	movlw	31
  1182  0009E8                     u1911:
  1183  0009E8  CFDB FFE3          	movff	plusw2,plusw1
  1184  0009EC  06E8               	decf	wreg,f,c
  1185  0009EE  E2FC               	bc	u1911
  1186  0009F0                     
  1187                           ;main.c: 101:                 for (i = 0; i < 32; i++) {
  1188  0009F0  0E00               	movlw	0
  1189  0009F2  0100               	movlb	0	; () banked
  1190  0009F4  6FEB               	movwf	main@i& (0+255),b
  1191  0009F6                     l2134:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;main.c: 102:                     if (Tela2[i] == '\n') {
  1195  0009F6  0EA0               	movlw	low main@Tela2
  1196  0009F8  25EB               	addwf	main@i& (0+255),w,b
  1197  0009FA  6ED9               	movwf	fsr2l,c
  1198  0009FC  6ADA               	clrf	fsr2h,c
  1199  0009FE  0E00               	movlw	high main@Tela2
  1200  000A00  22DA               	addwfc	fsr2h,f,c
  1201  000A02  0E0A               	movlw	10
  1202  000A04  18DE               	xorwf	postinc2,w,c
  1203  000A06  A4D8               	btfss	status,2,c
  1204  000A08  EF08  F005         	goto	u1921
  1205  000A0C  EF0A  F005         	goto	u1920
  1206  000A10                     u1921:
  1207  000A10  EF0F  F005         	goto	l2138
  1208  000A14                     u1920:
  1209  000A14                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 103:                         lcdCommand(0xC0);
  1212  000A14  0EC0               	movlw	192
  1213  000A16  ECAE  F009         	call	_lcdCommand
  1214                           
  1215                           ;main.c: 104:                         continue;
  1216  000A1A  EF18  F005         	goto	l2140
  1217  000A1E                     l2138:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;main.c: 106:                     lcdData(Tela2[i]);
  1221  000A1E  0EA0               	movlw	low main@Tela2
  1222  000A20  25EB               	addwf	main@i& (0+255),w,b
  1223  000A22  6ED9               	movwf	fsr2l,c
  1224  000A24  6ADA               	clrf	fsr2h,c
  1225  000A26  0E00               	movlw	high main@Tela2
  1226  000A28  22DA               	addwfc	fsr2h,f,c
  1227  000A2A  50DF               	movf	indf2,w,c
  1228  000A2C  EC1B  F00B         	call	_lcdData
  1229  000A30                     l2140:
  1230  000A30  0100               	movlb	0	; () banked
  1231  000A32  2BEB               	incf	main@i& (0+255),f,b
  1232  000A34                     
  1233                           ; BSR set to: 0
  1234  000A34  0E1F               	movlw	31
  1235  000A36  65EB               	cpfsgt	main@i& (0+255),b
  1236  000A38  EF20  F005         	goto	u1931
  1237  000A3C  EF22  F005         	goto	u1930
  1238  000A40                     u1931:
  1239  000A40  EFFB  F004         	goto	l2134
  1240  000A44                     u1930:
  1241  000A44                     l57:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;main.c: 109:             if (((tecla) & (1<<(0)))) {
  1245  000A44  A1EA               	btfss	main@tecla& (0+255),0,b
  1246  000A46  EF27  F005         	goto	u1941
  1247  000A4A  EF29  F005         	goto	u1940
  1248  000A4E                     u1941:
  1249  000A4E  EF5F  F005         	goto	l2164
  1250  000A52                     u1940:
  1251  000A52                     
  1252                           ; BSR set to: 0
  1253                           ;main.c: 110:                 lcdCommand(0x01);
  1254  000A52  0E01               	movlw	1
  1255  000A54  ECAE  F009         	call	_lcdCommand
  1256  000A58                     
  1257                           ;main.c: 111:                 char Tela3[32] = "0-Timer 30 min";
  1258  000A58  EE21  F000         	lfsr	2,main@F2393
  1259  000A5C  EE10  F0C0         	lfsr	1,main@Tela3
  1260  000A60  0E1F               	movlw	31
  1261  000A62                     u1951:
  1262  000A62  CFDB FFE3          	movff	plusw2,plusw1
  1263  000A66  06E8               	decf	wreg,f,c
  1264  000A68  E2FC               	bc	u1951
  1265  000A6A                     
  1266                           ;main.c: 112:                 for (i = 0; i < 32; i++) {
  1267  000A6A  0E00               	movlw	0
  1268  000A6C  0100               	movlb	0	; () banked
  1269  000A6E  6FEB               	movwf	main@i& (0+255),b
  1270  000A70                     l2154:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;main.c: 113:                     if (Tela3[i] == '\n') {
  1274  000A70  0EC0               	movlw	low main@Tela3
  1275  000A72  25EB               	addwf	main@i& (0+255),w,b
  1276  000A74  6ED9               	movwf	fsr2l,c
  1277  000A76  6ADA               	clrf	fsr2h,c
  1278  000A78  0E00               	movlw	high main@Tela3
  1279  000A7A  22DA               	addwfc	fsr2h,f,c
  1280  000A7C  0E0A               	movlw	10
  1281  000A7E  18DE               	xorwf	postinc2,w,c
  1282  000A80  A4D8               	btfss	status,2,c
  1283  000A82  EF45  F005         	goto	u1961
  1284  000A86  EF47  F005         	goto	u1960
  1285  000A8A                     u1961:
  1286  000A8A  EF4C  F005         	goto	l2158
  1287  000A8E                     u1960:
  1288  000A8E                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 114:                         lcdCommand(0xC0);
  1291  000A8E  0EC0               	movlw	192
  1292  000A90  ECAE  F009         	call	_lcdCommand
  1293                           
  1294                           ;main.c: 115:                         continue;
  1295  000A94  EF55  F005         	goto	l2160
  1296  000A98                     l2158:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;main.c: 117:                     lcdData(Tela3[i]);
  1300  000A98  0EC0               	movlw	low main@Tela3
  1301  000A9A  25EB               	addwf	main@i& (0+255),w,b
  1302  000A9C  6ED9               	movwf	fsr2l,c
  1303  000A9E  6ADA               	clrf	fsr2h,c
  1304  000AA0  0E00               	movlw	high main@Tela3
  1305  000AA2  22DA               	addwfc	fsr2h,f,c
  1306  000AA4  50DF               	movf	indf2,w,c
  1307  000AA6  EC1B  F00B         	call	_lcdData
  1308  000AAA                     l2160:
  1309  000AAA  0100               	movlb	0	; () banked
  1310  000AAC  2BEB               	incf	main@i& (0+255),f,b
  1311  000AAE                     
  1312                           ; BSR set to: 0
  1313  000AAE  0E1F               	movlw	31
  1314  000AB0  65EB               	cpfsgt	main@i& (0+255),b
  1315  000AB2  EF5D  F005         	goto	u1971
  1316  000AB6  EF5F  F005         	goto	u1970
  1317  000ABA                     u1971:
  1318  000ABA  EF38  F005         	goto	l2154
  1319  000ABE                     u1970:
  1320  000ABE                     l2164:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 121:         timerWait();
  1324  000ABE  ECBD  F00B         	call	_timerWait	;wreg free
  1325                           
  1326                           ;main.c: 122:     }
  1327  000AC2  EF24  F003         	goto	l2018
  1328  000AC6  EF00  F000         	goto	start
  1329  000ACA                     __end_of_main:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _timerWait *****************
  1333 ;; Defined at:
  1334 ;;		line 31 in file "timer.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		None
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text1
  1362  00177A                     __ptext1:
  1363                           	callstack 0
  1364  00177A                     _timerWait:
  1365                           	callstack 30
  1366  00177A                     l269:
  1367  00177A  A4F2               	btfss	242,2,c	;volatile
  1368  00177C  EFC2  F00B         	goto	u1661
  1369  001780  EFC4  F00B         	goto	u1660
  1370  001784                     u1661:
  1371  001784  EFBD  F00B         	goto	l269
  1372  001788                     u1660:
  1373  001788  0012               	return		;funcret
  1374  00178A                     __end_of_timerWait:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _timerReset *****************
  1378 ;; Defined at:
  1379 ;;		line 37 in file "timer.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  tempo           2    0[COMRAM] unsigned int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  ciclos          2    2[COMRAM] unsigned int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         2       0       0       0       0       0       0
  1394 ;;      Locals:         2       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0
  1396 ;;      Totals:         4       0       0       0       0       0       0
  1397 ;;Total ram usage:        4 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text2
  1407  0016F0                     __ptext2:
  1408                           	callstack 0
  1409  0016F0                     _timerReset:
  1410                           	callstack 30
  1411  0016F0                     
  1412                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 40:  unsigned 
      +                          ciclos = tempo * 2;
  1413  0016F0  90D8               	bcf	status,0,c
  1414  0016F2  3441               	rlcf	timerReset@tempo^0,w,c
  1415  0016F4  6E43               	movwf	timerReset@ciclos^0,c
  1416  0016F6  3442               	rlcf	(timerReset@tempo+1)^0,w,c
  1417  0016F8  6E44               	movwf	(timerReset@ciclos+1)^0,c
  1418  0016FA                     
  1419                           ;timer.c: 42:  ciclos = 65535 - ciclos;
  1420  0016FA  1E43               	comf	timerReset@ciclos^0,f,c
  1421  0016FC  1E44               	comf	(timerReset@ciclos+1)^0,f,c
  1422  0016FE                     
  1423                           ;timer.c: 44:  ciclos -= 14;
  1424  0016FE  0E0E               	movlw	14
  1425  001700  5E43               	subwf	timerReset@ciclos^0,f,c
  1426  001702  0E00               	movlw	0
  1427  001704  5A44               	subwfb	(timerReset@ciclos+1)^0,f,c
  1428  001706                     
  1429                           ;timer.c: 45:  TMR0H = (ciclos >> 8);
  1430  001706  5044               	movf	(timerReset@ciclos+1)^0,w,c
  1431  001708  6ED7               	movwf	215,c	;volatile
  1432  00170A                     
  1433                           ;timer.c: 46:  TMR0L = (ciclos & 0x00FF);
  1434  00170A  C043  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1435  00170E                     
  1436                           ;timer.c: 48:  ((INTCON) &= ~(1<<(2)));
  1437  00170E  94F2               	bcf	242,2,c	;volatile
  1438  001710  0012               	return		;funcret
  1439  001712                     __end_of_timerReset:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _timerInit *****************
  1443 ;; Defined at:
  1444 ;;		line 51 in file "timer.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1458 ;;      Params:         0       0       0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text3
  1472  00179E                     __ptext3:
  1473                           	callstack 0
  1474  00179E                     _timerInit:
  1475                           	callstack 30
  1476  00179E                     
  1477                           ;timer.c: 53:  T0CON = 0b00001000;
  1478  00179E  0E08               	movlw	8
  1479  0017A0  6ED5               	movwf	213,c	;volatile
  1480  0017A2                     
  1481                           ;timer.c: 54:  ((T0CON) |= (1<<(7)));
  1482  0017A2  8ED5               	bsf	213,7,c	;volatile
  1483  0017A4  0012               	return		;funcret
  1484  0017A6                     __end_of_timerInit:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _ssdUpdate *****************
  1488 ;; Defined at:
  1489 ;;		line 54 in file "ssd.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1503 ;;      Params:         0       0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0
  1505 ;;      Temps:          2       0       0       0       0       0       0
  1506 ;;      Totals:         2       0       0       0       0       0       0
  1507 ;;Total ram usage:        2 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    1
  1510 ;; This function calls:
  1511 ;;		_digitalWrite
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text4
  1518  0010E0                     __ptext4:
  1519                           	callstack 0
  1520  0010E0                     _ssdUpdate:
  1521                           	callstack 29
  1522  0010E0                     
  1523                           ;ssd.c: 58:     TRISD= 0x00;
  1524  0010E0  0E00               	movlw	0
  1525  0010E2  6E95               	movwf	149,c	;volatile
  1526  0010E4                     
  1527                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  1528  0010E4  0E00               	movlw	0
  1529  0010E6  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1530  0010E8  0E02               	movlw	2
  1531  0010EA  6E41               	movwf	digitalWrite@pin^0,c
  1532  0010EC  0E00               	movlw	0
  1533  0010EE  6E44               	movwf	(digitalWrite@value+1)^0,c
  1534  0010F0  0E00               	movlw	0
  1535  0010F2  6E43               	movwf	digitalWrite@value^0,c
  1536  0010F4  EC8C  F006         	call	_digitalWrite	;wreg free
  1537  0010F8                     
  1538                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  1539  0010F8  0E00               	movlw	0
  1540  0010FA  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1541  0010FC  0E03               	movlw	3
  1542  0010FE  6E41               	movwf	digitalWrite@pin^0,c
  1543  001100  0E00               	movlw	0
  1544  001102  6E44               	movwf	(digitalWrite@value+1)^0,c
  1545  001104  0E00               	movlw	0
  1546  001106  6E43               	movwf	digitalWrite@value^0,c
  1547  001108  EC8C  F006         	call	_digitalWrite	;wreg free
  1548  00110C                     
  1549                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  1550  00110C  0E00               	movlw	0
  1551  00110E  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1552  001110  0E04               	movlw	4
  1553  001112  6E41               	movwf	digitalWrite@pin^0,c
  1554  001114  0E00               	movlw	0
  1555  001116  6E44               	movwf	(digitalWrite@value+1)^0,c
  1556  001118  0E00               	movlw	0
  1557  00111A  6E43               	movwf	digitalWrite@value^0,c
  1558  00111C  EC8C  F006         	call	_digitalWrite	;wreg free
  1559  001120                     
  1560                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  1561  001120  0E00               	movlw	0
  1562  001122  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1563  001124  0E05               	movlw	5
  1564  001126  6E41               	movwf	digitalWrite@pin^0,c
  1565  001128  0E00               	movlw	0
  1566  00112A  6E44               	movwf	(digitalWrite@value+1)^0,c
  1567  00112C  0E00               	movlw	0
  1568  00112E  6E43               	movwf	digitalWrite@value^0,c
  1569  001130  EC8C  F006         	call	_digitalWrite	;wreg free
  1570                           
  1571                           ;ssd.c: 66:     PORTD = 0x00;
  1572  001134  0E00               	movlw	0
  1573  001136  6E83               	movwf	131,c	;volatile
  1574                           
  1575                           ;ssd.c: 69:     switch (display)
  1576  001138  EFFA  F008         	goto	l1916
  1577  00113C                     l1888:
  1578                           
  1579                           ;ssd.c: 72:             PORTD = valor[v0];
  1580  00113C  0E01               	movlw	low _valor@ssd$F244
  1581  00113E  2464               	addwf	_v0^0,w,c
  1582  001140  6EF6               	movwf	tblptrl,c
  1583  001142  6AF7               	clrf	tblptrh,c
  1584  001144  0E06               	movlw	high _valor@ssd$F244
  1585  001146  22F7               	addwfc	tblptrh,f,c
  1586  001148                     	if	0	;There are less than 3 active tblptr bytes
  1587  001148                     	endif
  1588  001148  0008               	tblrd		*
  1589  00114A  CFF5 FF83          	movff	tablat,3971	;volatile
  1590  00114E                     
  1591                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  1592  00114E  0E00               	movlw	0
  1593  001150  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1594  001152  0E02               	movlw	2
  1595  001154  6E41               	movwf	digitalWrite@pin^0,c
  1596  001156  0E00               	movlw	0
  1597  001158  6E44               	movwf	(digitalWrite@value+1)^0,c
  1598  00115A  0E01               	movlw	1
  1599  00115C  6E43               	movwf	digitalWrite@value^0,c
  1600  00115E  EC8C  F006         	call	_digitalWrite	;wreg free
  1601  001162                     
  1602                           ;ssd.c: 74:             display = 1;
  1603  001162  0E01               	movlw	1
  1604  001164  6E65               	movwf	_display^0,c
  1605                           
  1606                           ;ssd.c: 75:             break;
  1607  001166  EF17  F009         	goto	l252
  1608  00116A                     l1894:
  1609                           
  1610                           ;ssd.c: 78:             PORTD = valor[v1];
  1611  00116A  0E01               	movlw	low _valor@ssd$F244
  1612  00116C  2463               	addwf	_v1^0,w,c
  1613  00116E  6EF6               	movwf	tblptrl,c
  1614  001170  6AF7               	clrf	tblptrh,c
  1615  001172  0E06               	movlw	high _valor@ssd$F244
  1616  001174  22F7               	addwfc	tblptrh,f,c
  1617  001176                     	if	0	;There are less than 3 active tblptr bytes
  1618  001176                     	endif
  1619  001176  0008               	tblrd		*
  1620  001178  CFF5 FF83          	movff	tablat,3971	;volatile
  1621  00117C                     
  1622                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  1623  00117C  0E00               	movlw	0
  1624  00117E  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1625  001180  0E03               	movlw	3
  1626  001182  6E41               	movwf	digitalWrite@pin^0,c
  1627  001184  0E00               	movlw	0
  1628  001186  6E44               	movwf	(digitalWrite@value+1)^0,c
  1629  001188  0E01               	movlw	1
  1630  00118A  6E43               	movwf	digitalWrite@value^0,c
  1631  00118C  EC8C  F006         	call	_digitalWrite	;wreg free
  1632  001190                     
  1633                           ;ssd.c: 80:             display = 2;
  1634  001190  0E02               	movlw	2
  1635  001192  6E65               	movwf	_display^0,c
  1636                           
  1637                           ;ssd.c: 81:             break;
  1638  001194  EF17  F009         	goto	l252
  1639  001198                     l1900:
  1640                           
  1641                           ;ssd.c: 84:             PORTD = valor[v2];
  1642  001198  0E01               	movlw	low _valor@ssd$F244
  1643  00119A  2462               	addwf	_v2^0,w,c
  1644  00119C  6EF6               	movwf	tblptrl,c
  1645  00119E  6AF7               	clrf	tblptrh,c
  1646  0011A0  0E06               	movlw	high _valor@ssd$F244
  1647  0011A2  22F7               	addwfc	tblptrh,f,c
  1648  0011A4                     	if	0	;There are less than 3 active tblptr bytes
  1649  0011A4                     	endif
  1650  0011A4  0008               	tblrd		*
  1651  0011A6  CFF5 FF83          	movff	tablat,3971	;volatile
  1652  0011AA                     
  1653                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  1654  0011AA  0E00               	movlw	0
  1655  0011AC  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1656  0011AE  0E04               	movlw	4
  1657  0011B0  6E41               	movwf	digitalWrite@pin^0,c
  1658  0011B2  0E00               	movlw	0
  1659  0011B4  6E44               	movwf	(digitalWrite@value+1)^0,c
  1660  0011B6  0E01               	movlw	1
  1661  0011B8  6E43               	movwf	digitalWrite@value^0,c
  1662  0011BA  EC8C  F006         	call	_digitalWrite	;wreg free
  1663  0011BE                     
  1664                           ;ssd.c: 86:             display = 3;
  1665  0011BE  0E03               	movlw	3
  1666  0011C0  6E65               	movwf	_display^0,c
  1667                           
  1668                           ;ssd.c: 87:             break;
  1669  0011C2  EF17  F009         	goto	l252
  1670  0011C6                     l1906:
  1671                           
  1672                           ;ssd.c: 90:             PORTD = valor[v3];
  1673  0011C6  0E01               	movlw	low _valor@ssd$F244
  1674  0011C8  2461               	addwf	_v3^0,w,c
  1675  0011CA  6EF6               	movwf	tblptrl,c
  1676  0011CC  6AF7               	clrf	tblptrh,c
  1677  0011CE  0E06               	movlw	high _valor@ssd$F244
  1678  0011D0  22F7               	addwfc	tblptrh,f,c
  1679  0011D2                     	if	0	;There are less than 3 active tblptr bytes
  1680  0011D2                     	endif
  1681  0011D2  0008               	tblrd		*
  1682  0011D4  CFF5 FF83          	movff	tablat,3971	;volatile
  1683  0011D8                     
  1684                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  1685  0011D8  0E00               	movlw	0
  1686  0011DA  6E42               	movwf	(digitalWrite@pin+1)^0,c
  1687  0011DC  0E05               	movlw	5
  1688  0011DE  6E41               	movwf	digitalWrite@pin^0,c
  1689  0011E0  0E00               	movlw	0
  1690  0011E2  6E44               	movwf	(digitalWrite@value+1)^0,c
  1691  0011E4  0E01               	movlw	1
  1692  0011E6  6E43               	movwf	digitalWrite@value^0,c
  1693  0011E8  EC8C  F006         	call	_digitalWrite	;wreg free
  1694  0011EC                     l1910:
  1695                           
  1696                           ;ssd.c: 92:             display = 0;
  1697  0011EC  0E00               	movlw	0
  1698  0011EE  6E65               	movwf	_display^0,c
  1699                           
  1700                           ;ssd.c: 93:             break;
  1701  0011F0  EF17  F009         	goto	l252
  1702  0011F4                     l1916:
  1703  0011F4  5065               	movf	_display^0,w,c
  1704  0011F6  6E47               	movwf	??_ssdUpdate^0,c
  1705  0011F8  6A48               	clrf	(??_ssdUpdate+1)^0,c
  1706                           
  1707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1708                           ; Switch size 1, requested type "simple"
  1709                           ; Number of cases is 1, Range of values is 0 to 0
  1710                           ; switch strategies available:
  1711                           ; Name         Instructions Cycles
  1712                           ; simple_byte            4     3 (average)
  1713                           ;	Chosen strategy is simple_byte
  1714  0011FA  5048               	movf	(??_ssdUpdate+1)^0,w,c
  1715  0011FC  0A00               	xorlw	0	; case 0
  1716  0011FE  B4D8               	btfsc	status,2,c
  1717  001200  EF04  F009         	goto	l2196
  1718  001204  EFF6  F008         	goto	l1910
  1719  001208                     l2196:
  1720                           
  1721                           ; Switch size 1, requested type "simple"
  1722                           ; Number of cases is 4, Range of values is 0 to 3
  1723                           ; switch strategies available:
  1724                           ; Name         Instructions Cycles
  1725                           ; simple_byte           13     7 (average)
  1726                           ;	Chosen strategy is simple_byte
  1727  001208  5047               	movf	??_ssdUpdate^0,w,c
  1728  00120A  0A00               	xorlw	0	; case 0
  1729  00120C  B4D8               	btfsc	status,2,c
  1730  00120E  EF9E  F008         	goto	l1888
  1731  001212  0A01               	xorlw	1	; case 1
  1732  001214  B4D8               	btfsc	status,2,c
  1733  001216  EFB5  F008         	goto	l1894
  1734  00121A  0A03               	xorlw	3	; case 2
  1735  00121C  B4D8               	btfsc	status,2,c
  1736  00121E  EFCC  F008         	goto	l1900
  1737  001222  0A01               	xorlw	1	; case 3
  1738  001224  B4D8               	btfsc	status,2,c
  1739  001226  EFE3  F008         	goto	l1906
  1740  00122A  EFF6  F008         	goto	l1910
  1741  00122E                     l252:
  1742  00122E  0012               	return		;funcret
  1743  001230                     __end_of_ssdUpdate:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _ssdInit *****************
  1747 ;; Defined at:
  1748 ;;		line 101 in file "ssd.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         0       0       0       0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    1
  1769 ;; This function calls:
  1770 ;;		_pinMode
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text5
  1777  0015E0                     __ptext5:
  1778                           	callstack 0
  1779  0015E0                     _ssdInit:
  1780                           	callstack 29
  1781  0015E0                     
  1782                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1783  0015E0  0E00               	movlw	0
  1784  0015E2  6E42               	movwf	(pinMode@pin+1)^0,c
  1785  0015E4  0E02               	movlw	2
  1786  0015E6  6E41               	movwf	pinMode@pin^0,c
  1787  0015E8  0E00               	movlw	0
  1788  0015EA  6E44               	movwf	(pinMode@type+1)^0,c
  1789  0015EC  0E00               	movlw	0
  1790  0015EE  6E43               	movwf	pinMode@type^0,c
  1791  0015F0  EC65  F005         	call	_pinMode	;wreg free
  1792                           
  1793                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1794  0015F4  0E00               	movlw	0
  1795  0015F6  6E42               	movwf	(pinMode@pin+1)^0,c
  1796  0015F8  0E03               	movlw	3
  1797  0015FA  6E41               	movwf	pinMode@pin^0,c
  1798  0015FC  0E00               	movlw	0
  1799  0015FE  6E44               	movwf	(pinMode@type+1)^0,c
  1800  001600  0E00               	movlw	0
  1801  001602  6E43               	movwf	pinMode@type^0,c
  1802  001604  EC65  F005         	call	_pinMode	;wreg free
  1803                           
  1804                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1805  001608  0E00               	movlw	0
  1806  00160A  6E42               	movwf	(pinMode@pin+1)^0,c
  1807  00160C  0E04               	movlw	4
  1808  00160E  6E41               	movwf	pinMode@pin^0,c
  1809  001610  0E00               	movlw	0
  1810  001612  6E44               	movwf	(pinMode@type+1)^0,c
  1811  001614  0E00               	movlw	0
  1812  001616  6E43               	movwf	pinMode@type^0,c
  1813  001618  EC65  F005         	call	_pinMode	;wreg free
  1814                           
  1815                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  1816  00161C  0E00               	movlw	0
  1817  00161E  6E42               	movwf	(pinMode@pin+1)^0,c
  1818  001620  0E05               	movlw	5
  1819  001622  6E41               	movwf	pinMode@pin^0,c
  1820  001624  0E00               	movlw	0
  1821  001626  6E44               	movwf	(pinMode@type+1)^0,c
  1822  001628  0E00               	movlw	0
  1823  00162A  6E43               	movwf	pinMode@type^0,c
  1824  00162C  EC65  F005         	call	_pinMode	;wreg free
  1825  001630                     
  1826                           ;ssd.c: 109:     TRISD = 0x00;
  1827  001630  0E00               	movlw	0
  1828  001632  6E95               	movwf	149,c	;volatile
  1829  001634  0012               	return		;funcret
  1830  001636                     __end_of_ssdInit:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _ssdDigit *****************
  1834 ;; Defined at:
  1835 ;;		line 38 in file "ssd.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  val             1    wreg     unsigned char 
  1838 ;;  pos             1   22[COMRAM] unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  val             1   23[COMRAM] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1850 ;;      Params:         1       0       0       0       0       0       0
  1851 ;;      Locals:         1       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0
  1853 ;;      Totals:         2       0       0       0       0       0       0
  1854 ;;Total ram usage:        2 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text6
  1864  001532                     __ptext6:
  1865                           	callstack 0
  1866  001532                     _ssdDigit:
  1867                           	callstack 30
  1868                           
  1869                           ;incstack = 0
  1870                           ;ssdDigit@val stored from wreg
  1871  001532  6E58               	movwf	ssdDigit@val^0,c
  1872  001534                     
  1873                           ;ssd.c: 39:     if (pos == 0) {
  1874  001534  5057               	movf	ssdDigit@pos^0,w,c
  1875  001536  A4D8               	btfss	status,2,c
  1876  001538  EFA0  F00A         	goto	u1621
  1877  00153C  EFA2  F00A         	goto	u1620
  1878  001540                     u1621:
  1879  001540  EFA4  F00A         	goto	l1926
  1880  001544                     u1620:
  1881  001544                     
  1882                           ;ssd.c: 40:         v0 = val;
  1883  001544  C058  F064         	movff	ssdDigit@val,_v0
  1884  001548                     l1926:
  1885                           
  1886                           ;ssd.c: 42:     if (pos == 1) {
  1887  001548  0457               	decf	ssdDigit@pos^0,w,c
  1888  00154A  A4D8               	btfss	status,2,c
  1889  00154C  EFAA  F00A         	goto	u1631
  1890  001550  EFAC  F00A         	goto	u1630
  1891  001554                     u1631:
  1892  001554  EFAE  F00A         	goto	l1930
  1893  001558                     u1630:
  1894  001558                     
  1895                           ;ssd.c: 43:         v1 = val;
  1896  001558  C058  F063         	movff	ssdDigit@val,_v1
  1897  00155C                     l1930:
  1898                           
  1899                           ;ssd.c: 45:     if (pos == 2) {
  1900  00155C  0E02               	movlw	2
  1901  00155E  1857               	xorwf	ssdDigit@pos^0,w,c
  1902  001560  A4D8               	btfss	status,2,c
  1903  001562  EFB5  F00A         	goto	u1641
  1904  001566  EFB7  F00A         	goto	u1640
  1905  00156A                     u1641:
  1906  00156A  EFB9  F00A         	goto	l1934
  1907  00156E                     u1640:
  1908  00156E                     
  1909                           ;ssd.c: 46:         v2 = val;
  1910  00156E  C058  F062         	movff	ssdDigit@val,_v2
  1911  001572                     l1934:
  1912                           
  1913                           ;ssd.c: 48:     if (pos == 3) {
  1914  001572  0E03               	movlw	3
  1915  001574  1857               	xorwf	ssdDigit@pos^0,w,c
  1916  001576  A4D8               	btfss	status,2,c
  1917  001578  EFC0  F00A         	goto	u1651
  1918  00157C  EFC2  F00A         	goto	u1650
  1919  001580                     u1651:
  1920  001580  EFC4  F00A         	goto	l242
  1921  001584                     u1650:
  1922  001584                     
  1923                           ;ssd.c: 49:         v3 = val;
  1924  001584  C058  F061         	movff	ssdDigit@val,_v3
  1925  001588                     l242:
  1926  001588  0012               	return		;funcret
  1927  00158A                     __end_of_ssdDigit:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _pwmSet1 *****************
  1931 ;; Defined at:
  1932 ;;		line 24 in file "pwm1.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  porcento        1    wreg     unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  porcento        1    9[COMRAM] unsigned char 
  1937 ;;  val             2   10[COMRAM] unsigned int 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         0       0       0       0       0       0       0
  1948 ;;      Locals:         3       0       0       0       0       0       0
  1949 ;;      Temps:          2       0       0       0       0       0       0
  1950 ;;      Totals:         5       0       0       0       0       0       0
  1951 ;;Total ram usage:        5 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    1
  1954 ;; This function calls:
  1955 ;;		___lwdiv
  1956 ;;		___wmul
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text7
  1963  0014C6                     __ptext7:
  1964                           	callstack 0
  1965  0014C6                     _pwmSet1:
  1966                           	callstack 29
  1967                           
  1968                           ;incstack = 0
  1969                           ;pwmSet1@porcento stored from wreg
  1970  0014C6  6E4A               	movwf	pwmSet1@porcento^0,c
  1971  0014C8                     
  1972                           ;pwm1.c: 24: void pwmSet1(unsigned char porcento);pwm1.c: 25: {;pwm1.c: 31:  unsigned in
      +                          t val = ((unsigned int)porcento) *(PR2+1);
  1973  0014C8  0E01               	movlw	1
  1974  0014CA  24CB               	addwf	203,w,c	;volatile
  1975  0014CC  6E41               	movwf	___wmul@multiplier^0,c
  1976  0014CE  6A42               	clrf	(___wmul@multiplier+1)^0,c
  1977  0014D0  0E00               	movlw	0
  1978  0014D2  2242               	addwfc	(___wmul@multiplier+1)^0,f,c
  1979  0014D4  C04A  F043         	movff	pwmSet1@porcento,___wmul@multiplicand
  1980  0014D8  6A44               	clrf	(___wmul@multiplicand+1)^0,c
  1981  0014DA  EC65  F00B         	call	___wmul	;wreg free
  1982  0014DE  C041  F04B         	movff	?___wmul,pwmSet1@val
  1983  0014E2  C042  F04C         	movff	?___wmul+1,pwmSet1@val+1
  1984  0014E6                     
  1985                           ;pwm1.c: 32:  val = val / 25;
  1986  0014E6  C04B  F041         	movff	pwmSet1@val,___lwdiv@dividend
  1987  0014EA  C04C  F042         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1988  0014EE  0E00               	movlw	0
  1989  0014F0  6E44               	movwf	(___lwdiv@divisor+1)^0,c
  1990  0014F2  0E19               	movlw	25
  1991  0014F4  6E43               	movwf	___lwdiv@divisor^0,c
  1992  0014F6  EC29  F00A         	call	___lwdiv	;wreg free
  1993  0014FA  C041  F04B         	movff	?___lwdiv,pwmSet1@val
  1994  0014FE  C042  F04C         	movff	?___lwdiv+1,pwmSet1@val+1
  1995  001502                     
  1996                           ;pwm1.c: 34:  val &= 0x03ff;
  1997  001502  0EFF               	movlw	255
  1998  001504  164B               	andwf	pwmSet1@val^0,f,c
  1999  001506  0E03               	movlw	3
  2000  001508  164C               	andwf	(pwmSet1@val+1)^0,f,c
  2001  00150A                     
  2002                           ;pwm1.c: 36:  CCPR1L = val >> 2;
  2003  00150A  C04B  F048         	movff	pwmSet1@val,??_pwmSet1
  2004  00150E  C04C  F049         	movff	pwmSet1@val+1,??_pwmSet1+1
  2005  001512  90D8               	bcf	status,0,c
  2006  001514  3249               	rrcf	(??_pwmSet1+1)^0,f,c
  2007  001516  3248               	rrcf	??_pwmSet1^0,f,c
  2008  001518  90D8               	bcf	status,0,c
  2009  00151A  3249               	rrcf	(??_pwmSet1+1)^0,f,c
  2010  00151C  3248               	rrcf	??_pwmSet1^0,f,c
  2011  00151E  5048               	movf	??_pwmSet1^0,w,c
  2012  001520  6EBE               	movwf	190,c	;volatile
  2013  001522                     
  2014                           ;pwm1.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  2015  001522  C04B  F048         	movff	pwmSet1@val,??_pwmSet1	;volatile
  2016  001526  0E03               	movlw	3
  2017  001528  1648               	andwf	??_pwmSet1^0,f,c
  2018  00152A  3848               	swapf	??_pwmSet1^0,w,c
  2019  00152C  0BF0               	andlw	240
  2020  00152E  12BD               	iorwf	189,f,c	;volatile
  2021  001530  0012               	return		;funcret
  2022  001532                     __end_of_pwmSet1:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function ___wmul *****************
  2026 ;; Defined at:
  2027 ;;		line 15 in file "A:\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  multiplier      2    0[COMRAM] unsigned int 
  2030 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  product         2    4[COMRAM] unsigned int 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2    0[COMRAM] unsigned int 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, prodl, prodh
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         4       0       0       0       0       0       0
  2043 ;;      Locals:         2       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0
  2045 ;;      Totals:         6       0       0       0       0       0       0
  2046 ;;Total ram usage:        6 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_pwmSet1
  2052 ;;		_pwmSet2
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057  0016CA                     __ptext8:
  2058                           	callstack 0
  2059  0016CA                     ___wmul:
  2060                           	callstack 29
  2061  0016CA  5041               	movf	___wmul@multiplier^0,w,c
  2062  0016CC  0243               	mulwf	___wmul@multiplicand^0,c
  2063  0016CE  CFF3 F045          	movff	prodl,___wmul@product
  2064  0016D2  CFF4 F046          	movff	prodh,___wmul@product+1
  2065  0016D6  5041               	movf	___wmul@multiplier^0,w,c
  2066  0016D8  0244               	mulwf	(___wmul@multiplicand+1)^0,c
  2067  0016DA  50F3               	movf	243,w,c
  2068  0016DC  2646               	addwf	(___wmul@product+1)^0,f,c
  2069  0016DE  5042               	movf	(___wmul@multiplier+1)^0,w,c
  2070  0016E0  0243               	mulwf	___wmul@multiplicand^0,c
  2071  0016E2  50F3               	movf	243,w,c
  2072  0016E4  2646               	addwf	(___wmul@product+1)^0,f,c
  2073  0016E6  C045  F041         	movff	___wmul@product,?___wmul
  2074  0016EA  C046  F042         	movff	___wmul@product+1,?___wmul+1
  2075  0016EE  0012               	return		;funcret
  2076  0016F0                     __end_of___wmul:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function ___lwdiv *****************
  2080 ;; Defined at:
  2081 ;;		line 7 in file "A:\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  dividend        2    0[COMRAM] unsigned int 
  2084 ;;  divisor         2    2[COMRAM] unsigned int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  quotient        2    4[COMRAM] unsigned int 
  2087 ;;  counter         1    6[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2    0[COMRAM] unsigned int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         4       0       0       0       0       0       0
  2098 ;;      Locals:         3       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0
  2100 ;;      Totals:         7       0       0       0       0       0       0
  2101 ;;Total ram usage:        7 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_pwmSet1
  2107 ;;		_pwmSet2
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text9
  2112  001452                     __ptext9:
  2113                           	callstack 0
  2114  001452                     ___lwdiv:
  2115                           	callstack 29
  2116  001452  0E00               	movlw	0
  2117  001454  6E46               	movwf	(___lwdiv@quotient+1)^0,c
  2118  001456  0E00               	movlw	0
  2119  001458  6E45               	movwf	___lwdiv@quotient^0,c
  2120  00145A  5043               	movf	___lwdiv@divisor^0,w,c
  2121  00145C  1044               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2122  00145E  B4D8               	btfsc	status,2,c
  2123  001460  EF34  F00A         	goto	u1481
  2124  001464  EF36  F00A         	goto	u1480
  2125  001468                     u1481:
  2126  001468  EF5E  F00A         	goto	l798
  2127  00146C                     u1480:
  2128  00146C  0E01               	movlw	1
  2129  00146E  6E47               	movwf	___lwdiv@counter^0,c
  2130  001470  EF3E  F00A         	goto	l1748
  2131  001474                     l1746:
  2132  001474  90D8               	bcf	status,0,c
  2133  001476  3643               	rlcf	___lwdiv@divisor^0,f,c
  2134  001478  3644               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2135  00147A  2A47               	incf	___lwdiv@counter^0,f,c
  2136  00147C                     l1748:
  2137  00147C  AE44               	btfss	(___lwdiv@divisor+1)^0,7,c
  2138  00147E  EF43  F00A         	goto	u1491
  2139  001482  EF45  F00A         	goto	u1490
  2140  001486                     u1491:
  2141  001486  EF3A  F00A         	goto	l1746
  2142  00148A                     u1490:
  2143  00148A                     l1750:
  2144  00148A  90D8               	bcf	status,0,c
  2145  00148C  3645               	rlcf	___lwdiv@quotient^0,f,c
  2146  00148E  3646               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2147  001490  5043               	movf	___lwdiv@divisor^0,w,c
  2148  001492  5C41               	subwf	___lwdiv@dividend^0,w,c
  2149  001494  5044               	movf	(___lwdiv@divisor+1)^0,w,c
  2150  001496  5842               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2151  001498  A0D8               	btfss	status,0,c
  2152  00149A  EF51  F00A         	goto	u1501
  2153  00149E  EF53  F00A         	goto	u1500
  2154  0014A2                     u1501:
  2155  0014A2  EF58  F00A         	goto	l1758
  2156  0014A6                     u1500:
  2157  0014A6  5043               	movf	___lwdiv@divisor^0,w,c
  2158  0014A8  5E41               	subwf	___lwdiv@dividend^0,f,c
  2159  0014AA  5044               	movf	(___lwdiv@divisor+1)^0,w,c
  2160  0014AC  5A42               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2161  0014AE  8045               	bsf	___lwdiv@quotient^0,0,c
  2162  0014B0                     l1758:
  2163  0014B0  90D8               	bcf	status,0,c
  2164  0014B2  3244               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2165  0014B4  3243               	rrcf	___lwdiv@divisor^0,f,c
  2166  0014B6  2E47               	decfsz	___lwdiv@counter^0,f,c
  2167  0014B8  EF45  F00A         	goto	l1750
  2168  0014BC                     l798:
  2169  0014BC  C045  F041         	movff	___lwdiv@quotient,?___lwdiv
  2170  0014C0  C046  F042         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2171  0014C4  0012               	return		;funcret
  2172  0014C6                     __end_of___lwdiv:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _pwmInit *****************
  2176 ;; Defined at:
  2177 ;;		line 60 in file "pwm1.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         0       0       0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0
  2194 ;;      Totals:         0       0       0       0       0       0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text10
  2205  001766                     __ptext10:
  2206                           	callstack 0
  2207  001766                     _pwmInit:
  2208                           	callstack 30
  2209  001766                     
  2210                           ;pwm1.c: 62:  ((TRISC) &= ~(1<<(1)));
  2211  001766  9294               	bcf	148,1,c	;volatile
  2212                           
  2213                           ;pwm1.c: 63:  ((TRISC) &= ~(1<<(2)));
  2214  001768  9494               	bcf	148,2,c	;volatile
  2215  00176A                     
  2216                           ;pwm1.c: 65:  T2CON |= 0b00000011;
  2217  00176A  0E03               	movlw	3
  2218  00176C  12CA               	iorwf	202,f,c	;volatile
  2219  00176E                     
  2220                           ;pwm1.c: 66:  ((T2CON) |= (1<<(2)));
  2221  00176E  84CA               	bsf	202,2,c	;volatile
  2222                           
  2223                           ;pwm1.c: 69:  CCP1CON |= 0b00001100;
  2224  001770  0E0C               	movlw	12
  2225  001772  12BD               	iorwf	189,f,c	;volatile
  2226                           
  2227                           ;pwm1.c: 70:  CCP2CON |= 0b00001100;
  2228  001774  0E0C               	movlw	12
  2229  001776  12BA               	iorwf	186,f,c	;volatile
  2230  001778  0012               	return		;funcret
  2231  00177A                     __end_of_pwmInit:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _lcdInit *****************
  2235 ;; Defined at:
  2236 ;;		line 95 in file "lcd.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2250 ;;      Params:         0       0       0       0       0       0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0
  2253 ;;      Totals:         0       0       0       0       0       0       0
  2254 ;;Total ram usage:        0 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		_Delay2ms
  2259 ;;		_lcdCommand
  2260 ;;		_pinMode
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text11
  2267  0013DA                     __ptext11:
  2268                           	callstack 0
  2269  0013DA                     _lcdInit:
  2270                           	callstack 27
  2271  0013DA                     
  2272                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2273  0013DA  0E00               	movlw	0
  2274  0013DC  6E42               	movwf	(pinMode@pin+1)^0,c
  2275  0013DE  0E22               	movlw	34
  2276  0013E0  6E41               	movwf	pinMode@pin^0,c
  2277  0013E2  0E00               	movlw	0
  2278  0013E4  6E44               	movwf	(pinMode@type+1)^0,c
  2279  0013E6  0E00               	movlw	0
  2280  0013E8  6E43               	movwf	pinMode@type^0,c
  2281  0013EA  EC65  F005         	call	_pinMode	;wreg free
  2282                           
  2283                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2284  0013EE  0E00               	movlw	0
  2285  0013F0  6E42               	movwf	(pinMode@pin+1)^0,c
  2286  0013F2  0E21               	movlw	33
  2287  0013F4  6E41               	movwf	pinMode@pin^0,c
  2288  0013F6  0E00               	movlw	0
  2289  0013F8  6E44               	movwf	(pinMode@type+1)^0,c
  2290  0013FA  0E00               	movlw	0
  2291  0013FC  6E43               	movwf	pinMode@type^0,c
  2292  0013FE  EC65  F005         	call	_pinMode	;wreg free
  2293  001402                     
  2294                           ;lcd.c: 99:  TRISD = 0x00;
  2295  001402  0E00               	movlw	0
  2296  001404  6E95               	movwf	149,c	;volatile
  2297  001406                     
  2298                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2299  001406  EC99  F00B         	call	_Delay2ms	;wreg free
  2300  00140A  EC99  F00B         	call	_Delay2ms	;wreg free
  2301  00140E  EC99  F00B         	call	_Delay2ms	;wreg free
  2302  001412  EC99  F00B         	call	_Delay2ms	;wreg free
  2303  001416  EC99  F00B         	call	_Delay2ms	;wreg free
  2304  00141A                     
  2305                           ;lcd.c: 104:     lcdCommand(0x38);
  2306  00141A  0E38               	movlw	56
  2307  00141C  ECAE  F009         	call	_lcdCommand
  2308  001420                     
  2309                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2310  001420  EC99  F00B         	call	_Delay2ms	;wreg free
  2311  001424  EC99  F00B         	call	_Delay2ms	;wreg free
  2312  001428                     
  2313                           ;lcd.c: 106:     lcdCommand(0x38);
  2314  001428  0E38               	movlw	56
  2315  00142A  ECAE  F009         	call	_lcdCommand
  2316  00142E                     
  2317                           ;lcd.c: 107:     Delay2ms();
  2318  00142E  EC99  F00B         	call	_Delay2ms	;wreg free
  2319  001432                     
  2320                           ;lcd.c: 108:     lcdCommand(0x38);
  2321  001432  0E38               	movlw	56
  2322  001434  ECAE  F009         	call	_lcdCommand
  2323  001438                     
  2324                           ;lcd.c: 110:     lcdCommand(0x38);
  2325  001438  0E38               	movlw	56
  2326  00143A  ECAE  F009         	call	_lcdCommand
  2327  00143E                     
  2328                           ;lcd.c: 111:     lcdCommand(0x06);
  2329  00143E  0E06               	movlw	6
  2330  001440  ECAE  F009         	call	_lcdCommand
  2331  001444                     
  2332                           ;lcd.c: 114:     lcdCommand(0x0C);
  2333  001444  0E0C               	movlw	12
  2334  001446  ECAE  F009         	call	_lcdCommand
  2335  00144A                     
  2336                           ;lcd.c: 115:     lcdCommand(0x01);
  2337  00144A  0E01               	movlw	1
  2338  00144C  ECAE  F009         	call	_lcdCommand
  2339  001450  0012               	return		;funcret
  2340  001452                     __end_of_lcdInit:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _pinMode *****************
  2344 ;; Defined at:
  2345 ;;		line 54 in file "io.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  pin             2    0[COMRAM] int 
  2348 ;;  type            2    2[COMRAM] int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2360 ;;      Params:         4       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0
  2362 ;;      Temps:          2       0       0       0       0       0       0
  2363 ;;      Totals:         6       0       0       0       0       0       0
  2364 ;;Total ram usage:        6 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_lcdInit
  2370 ;;		_ssdInit
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text12
  2375  000ACA                     __ptext12:
  2376                           	callstack 0
  2377  000ACA                     _pinMode:
  2378                           	callstack 29
  2379  000ACA                     
  2380                           ;io.c: 56:     if(pin <8){
  2381  000ACA  BE42               	btfsc	(pinMode@pin+1)^0,7,c
  2382  000ACC  EF73  F005         	goto	u1280
  2383  000AD0  5042               	movf	(pinMode@pin+1)^0,w,c
  2384  000AD2  E107               	bnz	u1281
  2385  000AD4  0E08               	movlw	8
  2386  000AD6  5C41               	subwf	pinMode@pin^0,w,c
  2387  000AD8  B0D8               	btfsc	status,0,c
  2388  000ADA  EF71  F005         	goto	u1281
  2389  000ADE  EF73  F005         	goto	u1280
  2390  000AE2                     u1281:
  2391  000AE2  EF9D  F005         	goto	l1702
  2392  000AE6                     u1280:
  2393  000AE6                     
  2394                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2395  000AE6  5043               	movf	pinMode@type^0,w,c
  2396  000AE8  1044               	iorwf	(pinMode@type+1)^0,w,c
  2397  000AEA  B4D8               	btfsc	status,2,c
  2398  000AEC  EF7A  F005         	goto	u1291
  2399  000AF0  EF7C  F005         	goto	u1290
  2400  000AF4                     u1291:
  2401  000AF4  EF8C  F005         	goto	l1700
  2402  000AF8                     u1290:
  2403  000AF8  C041  F045         	movff	pinMode@pin,??_pinMode
  2404  000AFC  0E01               	movlw	1
  2405  000AFE  6E46               	movwf	(??_pinMode+1)^0,c
  2406  000B00  2A45               	incf	??_pinMode^0,f,c
  2407  000B02  EF85  F005         	goto	u1304
  2408  000B06                     u1305:
  2409  000B06  90D8               	bcf	status,0,c
  2410  000B08  3646               	rlcf	(??_pinMode+1)^0,f,c
  2411  000B0A                     u1304:
  2412  000B0A  2E45               	decfsz	??_pinMode^0,f,c
  2413  000B0C  EF83  F005         	goto	u1305
  2414  000B10  5046               	movf	(??_pinMode+1)^0,w,c
  2415  000B12  1292               	iorwf	146,f,c	;volatile
  2416  000B14  EF8B  F006         	goto	l148
  2417  000B18                     l1700:
  2418  000B18  C041  F045         	movff	pinMode@pin,??_pinMode
  2419  000B1C  0E01               	movlw	1
  2420  000B1E  6E46               	movwf	(??_pinMode+1)^0,c
  2421  000B20  2A45               	incf	??_pinMode^0,f,c
  2422  000B22  EF95  F005         	goto	u1314
  2423  000B26                     u1315:
  2424  000B26  90D8               	bcf	status,0,c
  2425  000B28  3646               	rlcf	(??_pinMode+1)^0,f,c
  2426  000B2A                     u1314:
  2427  000B2A  2E45               	decfsz	??_pinMode^0,f,c
  2428  000B2C  EF93  F005         	goto	u1315
  2429  000B30  5046               	movf	(??_pinMode+1)^0,w,c
  2430  000B32  0AFF               	xorlw	255
  2431  000B34  1692               	andwf	146,f,c	;volatile
  2432  000B36  EF8B  F006         	goto	l148
  2433  000B3A                     l1702:
  2434  000B3A  BE42               	btfsc	(pinMode@pin+1)^0,7,c
  2435  000B3C  EFAB  F005         	goto	u1320
  2436  000B40  5042               	movf	(pinMode@pin+1)^0,w,c
  2437  000B42  E107               	bnz	u1321
  2438  000B44  0E10               	movlw	16
  2439  000B46  5C41               	subwf	pinMode@pin^0,w,c
  2440  000B48  B0D8               	btfsc	status,0,c
  2441  000B4A  EFA9  F005         	goto	u1321
  2442  000B4E  EFAB  F005         	goto	u1320
  2443  000B52                     u1321:
  2444  000B52  EFD9  F005         	goto	l1710
  2445  000B56                     u1320:
  2446  000B56                     
  2447                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2448  000B56  5043               	movf	pinMode@type^0,w,c
  2449  000B58  1044               	iorwf	(pinMode@type+1)^0,w,c
  2450  000B5A  B4D8               	btfsc	status,2,c
  2451  000B5C  EFB2  F005         	goto	u1331
  2452  000B60  EFB4  F005         	goto	u1330
  2453  000B64                     u1331:
  2454  000B64  EFC6  F005         	goto	l1708
  2455  000B68                     u1330:
  2456  000B68  C041  F045         	movff	pinMode@pin,??_pinMode
  2457  000B6C  0EF8               	movlw	-8
  2458  000B6E  2645               	addwf	??_pinMode^0,f,c
  2459  000B70  0E01               	movlw	1
  2460  000B72  6E46               	movwf	(??_pinMode+1)^0,c
  2461  000B74  2A45               	incf	??_pinMode^0,f,c
  2462  000B76  EFBF  F005         	goto	u1344
  2463  000B7A                     u1345:
  2464  000B7A  90D8               	bcf	status,0,c
  2465  000B7C  3646               	rlcf	(??_pinMode+1)^0,f,c
  2466  000B7E                     u1344:
  2467  000B7E  2E45               	decfsz	??_pinMode^0,f,c
  2468  000B80  EFBD  F005         	goto	u1345
  2469  000B84  5046               	movf	(??_pinMode+1)^0,w,c
  2470  000B86  1293               	iorwf	147,f,c	;volatile
  2471  000B88  EF8B  F006         	goto	l148
  2472  000B8C                     l1708:
  2473  000B8C  C041  F045         	movff	pinMode@pin,??_pinMode
  2474  000B90  0EF8               	movlw	-8
  2475  000B92  2645               	addwf	??_pinMode^0,f,c
  2476  000B94  0E01               	movlw	1
  2477  000B96  6E46               	movwf	(??_pinMode+1)^0,c
  2478  000B98  2A45               	incf	??_pinMode^0,f,c
  2479  000B9A  EFD1  F005         	goto	u1354
  2480  000B9E                     u1355:
  2481  000B9E  90D8               	bcf	status,0,c
  2482  000BA0  3646               	rlcf	(??_pinMode+1)^0,f,c
  2483  000BA2                     u1354:
  2484  000BA2  2E45               	decfsz	??_pinMode^0,f,c
  2485  000BA4  EFCF  F005         	goto	u1355
  2486  000BA8  5046               	movf	(??_pinMode+1)^0,w,c
  2487  000BAA  0AFF               	xorlw	255
  2488  000BAC  1693               	andwf	147,f,c	;volatile
  2489  000BAE  EF8B  F006         	goto	l148
  2490  000BB2                     l1710:
  2491  000BB2  BE42               	btfsc	(pinMode@pin+1)^0,7,c
  2492  000BB4  EFE7  F005         	goto	u1360
  2493  000BB8  5042               	movf	(pinMode@pin+1)^0,w,c
  2494  000BBA  E107               	bnz	u1361
  2495  000BBC  0E18               	movlw	24
  2496  000BBE  5C41               	subwf	pinMode@pin^0,w,c
  2497  000BC0  B0D8               	btfsc	status,0,c
  2498  000BC2  EFE5  F005         	goto	u1361
  2499  000BC6  EFE7  F005         	goto	u1360
  2500  000BCA                     u1361:
  2501  000BCA  EF15  F006         	goto	l1718
  2502  000BCE                     u1360:
  2503  000BCE                     
  2504                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2505  000BCE  5043               	movf	pinMode@type^0,w,c
  2506  000BD0  1044               	iorwf	(pinMode@type+1)^0,w,c
  2507  000BD2  B4D8               	btfsc	status,2,c
  2508  000BD4  EFEE  F005         	goto	u1371
  2509  000BD8  EFF0  F005         	goto	u1370
  2510  000BDC                     u1371:
  2511  000BDC  EF02  F006         	goto	l1716
  2512  000BE0                     u1370:
  2513  000BE0  C041  F045         	movff	pinMode@pin,??_pinMode
  2514  000BE4  0EF0               	movlw	-16
  2515  000BE6  2645               	addwf	??_pinMode^0,f,c
  2516  000BE8  0E01               	movlw	1
  2517  000BEA  6E46               	movwf	(??_pinMode+1)^0,c
  2518  000BEC  2A45               	incf	??_pinMode^0,f,c
  2519  000BEE  EFFB  F005         	goto	u1384
  2520  000BF2                     u1385:
  2521  000BF2  90D8               	bcf	status,0,c
  2522  000BF4  3646               	rlcf	(??_pinMode+1)^0,f,c
  2523  000BF6                     u1384:
  2524  000BF6  2E45               	decfsz	??_pinMode^0,f,c
  2525  000BF8  EFF9  F005         	goto	u1385
  2526  000BFC  5046               	movf	(??_pinMode+1)^0,w,c
  2527  000BFE  1294               	iorwf	148,f,c	;volatile
  2528  000C00  EF8B  F006         	goto	l148
  2529  000C04                     l1716:
  2530  000C04  C041  F045         	movff	pinMode@pin,??_pinMode
  2531  000C08  0EF0               	movlw	-16
  2532  000C0A  2645               	addwf	??_pinMode^0,f,c
  2533  000C0C  0E01               	movlw	1
  2534  000C0E  6E46               	movwf	(??_pinMode+1)^0,c
  2535  000C10  2A45               	incf	??_pinMode^0,f,c
  2536  000C12  EF0D  F006         	goto	u1394
  2537  000C16                     u1395:
  2538  000C16  90D8               	bcf	status,0,c
  2539  000C18  3646               	rlcf	(??_pinMode+1)^0,f,c
  2540  000C1A                     u1394:
  2541  000C1A  2E45               	decfsz	??_pinMode^0,f,c
  2542  000C1C  EF0B  F006         	goto	u1395
  2543  000C20  5046               	movf	(??_pinMode+1)^0,w,c
  2544  000C22  0AFF               	xorlw	255
  2545  000C24  1694               	andwf	148,f,c	;volatile
  2546  000C26  EF8B  F006         	goto	l148
  2547  000C2A                     l1718:
  2548  000C2A  BE42               	btfsc	(pinMode@pin+1)^0,7,c
  2549  000C2C  EF23  F006         	goto	u1400
  2550  000C30  5042               	movf	(pinMode@pin+1)^0,w,c
  2551  000C32  E107               	bnz	u1401
  2552  000C34  0E20               	movlw	32
  2553  000C36  5C41               	subwf	pinMode@pin^0,w,c
  2554  000C38  B0D8               	btfsc	status,0,c
  2555  000C3A  EF21  F006         	goto	u1401
  2556  000C3E  EF23  F006         	goto	u1400
  2557  000C42                     u1401:
  2558  000C42  EF51  F006         	goto	l1726
  2559  000C46                     u1400:
  2560  000C46                     
  2561                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2562  000C46  5043               	movf	pinMode@type^0,w,c
  2563  000C48  1044               	iorwf	(pinMode@type+1)^0,w,c
  2564  000C4A  B4D8               	btfsc	status,2,c
  2565  000C4C  EF2A  F006         	goto	u1411
  2566  000C50  EF2C  F006         	goto	u1410
  2567  000C54                     u1411:
  2568  000C54  EF3E  F006         	goto	l1724
  2569  000C58                     u1410:
  2570  000C58  C041  F045         	movff	pinMode@pin,??_pinMode
  2571  000C5C  0EE8               	movlw	-24
  2572  000C5E  2645               	addwf	??_pinMode^0,f,c
  2573  000C60  0E01               	movlw	1
  2574  000C62  6E46               	movwf	(??_pinMode+1)^0,c
  2575  000C64  2A45               	incf	??_pinMode^0,f,c
  2576  000C66  EF37  F006         	goto	u1424
  2577  000C6A                     u1425:
  2578  000C6A  90D8               	bcf	status,0,c
  2579  000C6C  3646               	rlcf	(??_pinMode+1)^0,f,c
  2580  000C6E                     u1424:
  2581  000C6E  2E45               	decfsz	??_pinMode^0,f,c
  2582  000C70  EF35  F006         	goto	u1425
  2583  000C74  5046               	movf	(??_pinMode+1)^0,w,c
  2584  000C76  1295               	iorwf	149,f,c	;volatile
  2585  000C78  EF8B  F006         	goto	l148
  2586  000C7C                     l1724:
  2587  000C7C  C041  F045         	movff	pinMode@pin,??_pinMode
  2588  000C80  0EE8               	movlw	-24
  2589  000C82  2645               	addwf	??_pinMode^0,f,c
  2590  000C84  0E01               	movlw	1
  2591  000C86  6E46               	movwf	(??_pinMode+1)^0,c
  2592  000C88  2A45               	incf	??_pinMode^0,f,c
  2593  000C8A  EF49  F006         	goto	u1434
  2594  000C8E                     u1435:
  2595  000C8E  90D8               	bcf	status,0,c
  2596  000C90  3646               	rlcf	(??_pinMode+1)^0,f,c
  2597  000C92                     u1434:
  2598  000C92  2E45               	decfsz	??_pinMode^0,f,c
  2599  000C94  EF47  F006         	goto	u1435
  2600  000C98  5046               	movf	(??_pinMode+1)^0,w,c
  2601  000C9A  0AFF               	xorlw	255
  2602  000C9C  1695               	andwf	149,f,c	;volatile
  2603  000C9E  EF8B  F006         	goto	l148
  2604  000CA2                     l1726:
  2605  000CA2  BE42               	btfsc	(pinMode@pin+1)^0,7,c
  2606  000CA4  EF5F  F006         	goto	u1440
  2607  000CA8  5042               	movf	(pinMode@pin+1)^0,w,c
  2608  000CAA  E107               	bnz	u1441
  2609  000CAC  0E28               	movlw	40
  2610  000CAE  5C41               	subwf	pinMode@pin^0,w,c
  2611  000CB0  B0D8               	btfsc	status,0,c
  2612  000CB2  EF5D  F006         	goto	u1441
  2613  000CB6  EF5F  F006         	goto	u1440
  2614  000CBA                     u1441:
  2615  000CBA  EF8B  F006         	goto	l148
  2616  000CBE                     u1440:
  2617  000CBE                     
  2618                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2619  000CBE  5043               	movf	pinMode@type^0,w,c
  2620  000CC0  1044               	iorwf	(pinMode@type+1)^0,w,c
  2621  000CC2  B4D8               	btfsc	status,2,c
  2622  000CC4  EF66  F006         	goto	u1451
  2623  000CC8  EF68  F006         	goto	u1450
  2624  000CCC                     u1451:
  2625  000CCC  EF7A  F006         	goto	l1732
  2626  000CD0                     u1450:
  2627  000CD0  C041  F045         	movff	pinMode@pin,??_pinMode
  2628  000CD4  0EE0               	movlw	-32
  2629  000CD6  2645               	addwf	??_pinMode^0,f,c
  2630  000CD8  0E01               	movlw	1
  2631  000CDA  6E46               	movwf	(??_pinMode+1)^0,c
  2632  000CDC  2A45               	incf	??_pinMode^0,f,c
  2633  000CDE  EF73  F006         	goto	u1464
  2634  000CE2                     u1465:
  2635  000CE2  90D8               	bcf	status,0,c
  2636  000CE4  3646               	rlcf	(??_pinMode+1)^0,f,c
  2637  000CE6                     u1464:
  2638  000CE6  2E45               	decfsz	??_pinMode^0,f,c
  2639  000CE8  EF71  F006         	goto	u1465
  2640  000CEC  5046               	movf	(??_pinMode+1)^0,w,c
  2641  000CEE  1296               	iorwf	150,f,c	;volatile
  2642  000CF0  EF8B  F006         	goto	l148
  2643  000CF4                     l1732:
  2644  000CF4  C041  F045         	movff	pinMode@pin,??_pinMode
  2645  000CF8  0EE0               	movlw	-32
  2646  000CFA  2645               	addwf	??_pinMode^0,f,c
  2647  000CFC  0E01               	movlw	1
  2648  000CFE  6E46               	movwf	(??_pinMode+1)^0,c
  2649  000D00  2A45               	incf	??_pinMode^0,f,c
  2650  000D02  EF85  F006         	goto	u1474
  2651  000D06                     u1475:
  2652  000D06  90D8               	bcf	status,0,c
  2653  000D08  3646               	rlcf	(??_pinMode+1)^0,f,c
  2654  000D0A                     u1474:
  2655  000D0A  2E45               	decfsz	??_pinMode^0,f,c
  2656  000D0C  EF83  F006         	goto	u1475
  2657  000D10  5046               	movf	(??_pinMode+1)^0,w,c
  2658  000D12  0AFF               	xorlw	255
  2659  000D14  1696               	andwf	150,f,c	;volatile
  2660  000D16                     l148:
  2661  000D16  0012               	return		;funcret
  2662  000D18                     __end_of_pinMode:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _lcdCommand *****************
  2666 ;; Defined at:
  2667 ;;		line 48 in file "lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  cmd             1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  cmd             1    7[COMRAM] unsigned char 
  2672 ;;  old_D           1    6[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         0       0       0       0       0       0       0
  2683 ;;      Locals:         2       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0
  2685 ;;      Totals:         2       0       0       0       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    2
  2689 ;; This function calls:
  2690 ;;		_Delay2ms
  2691 ;;		_Delay40us
  2692 ;;		_digitalWrite
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;;		_lcdInit
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text13
  2700  00135C                     __ptext13:
  2701                           	callstack 0
  2702  00135C                     _lcdCommand:
  2703                           	callstack 27
  2704                           
  2705                           ;incstack = 0
  2706                           ;lcdCommand@cmd stored from wreg
  2707  00135C  6E48               	movwf	lcdCommand@cmd^0,c
  2708  00135E                     
  2709                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  2710  00135E  CF83 F047          	movff	3971,lcdCommand@old_D	;volatile
  2711  001362                     
  2712                           ;lcd.c: 54:     TRISD = 0x00;
  2713  001362  0E00               	movlw	0
  2714  001364  6E95               	movwf	149,c	;volatile
  2715  001366                     
  2716                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  2717  001366  0E00               	movlw	0
  2718  001368  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2719  00136A  0E22               	movlw	34
  2720  00136C  6E41               	movwf	digitalWrite@pin^0,c
  2721  00136E  0E00               	movlw	0
  2722  001370  6E44               	movwf	(digitalWrite@value+1)^0,c
  2723  001372  0E00               	movlw	0
  2724  001374  6E43               	movwf	digitalWrite@value^0,c
  2725  001376  EC8C  F006         	call	_digitalWrite	;wreg free
  2726  00137A                     
  2727                           ;lcd.c: 57:  PORTD = cmd;
  2728  00137A  C048  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2729  00137E                     
  2730                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  2731  00137E  0E00               	movlw	0
  2732  001380  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2733  001382  0E21               	movlw	33
  2734  001384  6E41               	movwf	digitalWrite@pin^0,c
  2735  001386  0E00               	movlw	0
  2736  001388  6E44               	movwf	(digitalWrite@value+1)^0,c
  2737  00138A  0E01               	movlw	1
  2738  00138C  6E43               	movwf	digitalWrite@value^0,c
  2739  00138E  EC8C  F006         	call	_digitalWrite	;wreg free
  2740  001392                     
  2741                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  2742  001392  0E00               	movlw	0
  2743  001394  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2744  001396  0E21               	movlw	33
  2745  001398  6E41               	movwf	digitalWrite@pin^0,c
  2746  00139A  0E00               	movlw	0
  2747  00139C  6E44               	movwf	(digitalWrite@value+1)^0,c
  2748  00139E  0E00               	movlw	0
  2749  0013A0  6E43               	movwf	digitalWrite@value^0,c
  2750  0013A2  EC8C  F006         	call	_digitalWrite	;wreg free
  2751  0013A6                     
  2752                           ;lcd.c: 63:     PORTD= old_D;
  2753  0013A6  C047  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2754  0013AA                     
  2755                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  2756  0013AA  0E02               	movlw	2
  2757  0013AC  1848               	xorwf	lcdCommand@cmd^0,w,c
  2758  0013AE  B4D8               	btfsc	status,2,c
  2759  0013B0  EFDC  F009         	goto	u1261
  2760  0013B4  EFDE  F009         	goto	u1260
  2761  0013B8                     u1261:
  2762  0013B8  EFE6  F009         	goto	l1690
  2763  0013BC                     u1260:
  2764  0013BC  0448               	decf	lcdCommand@cmd^0,w,c
  2765  0013BE  A4D8               	btfss	status,2,c
  2766  0013C0  EFE4  F009         	goto	u1271
  2767  0013C4  EFE6  F009         	goto	u1270
  2768  0013C8                     u1271:
  2769  0013C8  EFEA  F009         	goto	l1692
  2770  0013CC                     u1270:
  2771  0013CC                     l1690:
  2772                           
  2773                           ;lcd.c: 66:        Delay2ms();
  2774  0013CC  EC99  F00B         	call	_Delay2ms	;wreg free
  2775                           
  2776                           ;lcd.c: 67:     }else{
  2777  0013D0  EFEC  F009         	goto	l209
  2778  0013D4                     l1692:
  2779                           
  2780                           ;lcd.c: 68:     Delay40us();
  2781  0013D4  ECA7  F00B         	call	_Delay40us	;wreg free
  2782  0013D8                     l209:
  2783  0013D8  0012               	return		;funcret
  2784  0013DA                     __end_of_lcdCommand:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _Delay2ms *****************
  2788 ;; Defined at:
  2789 ;;		line 37 in file "lcd.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  i               1    1[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2803 ;;      Params:         0       0       0       0       0       0       0
  2804 ;;      Locals:         1       0       0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0
  2806 ;;      Totals:         1       0       0       0       0       0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    1
  2810 ;; This function calls:
  2811 ;;		_Delay40us
  2812 ;; This function is called by:
  2813 ;;		_lcdCommand
  2814 ;;		_lcdInit
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text14
  2819  001732                     __ptext14:
  2820                           	callstack 0
  2821  001732                     _Delay2ms:
  2822                           	callstack 27
  2823  001732                     
  2824                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  2825  001732  0E00               	movlw	0
  2826  001734  6E42               	movwf	Delay2ms@i^0,c
  2827  001736                     l1666:
  2828                           
  2829                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  2830  001736  ECA7  F00B         	call	_Delay40us	;wreg free
  2831  00173A                     
  2832                           ;lcd.c: 43:  }
  2833  00173A  2A42               	incf	Delay2ms@i^0,f,c
  2834  00173C  0E31               	movlw	49
  2835  00173E  6442               	cpfsgt	Delay2ms@i^0,c
  2836  001740  EFA4  F00B         	goto	u1251
  2837  001744  EFA6  F00B         	goto	u1250
  2838  001748                     u1251:
  2839  001748  EF9B  F00B         	goto	l1666
  2840  00174C                     u1250:
  2841  00174C  0012               	return		;funcret
  2842  00174E                     __end_of_Delay2ms:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _lcdData *****************
  2846 ;; Defined at:
  2847 ;;		line 74 in file "lcd.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  valor           1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  valor           1    6[COMRAM] unsigned char 
  2852 ;;  old_D           1    7[COMRAM] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2862 ;;      Params:         0       0       0       0       0       0       0
  2863 ;;      Locals:         2       0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0
  2865 ;;      Totals:         2       0       0       0       0       0       0
  2866 ;;Total ram usage:        2 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    1
  2869 ;; This function calls:
  2870 ;;		_Delay40us
  2871 ;;		_digitalWrite
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text15
  2878  001636                     __ptext15:
  2879                           	callstack 0
  2880  001636                     _lcdData:
  2881                           	callstack 29
  2882                           
  2883                           ;incstack = 0
  2884                           ;lcdData@valor stored from wreg
  2885  001636  6E47               	movwf	lcdData@valor^0,c
  2886  001638                     
  2887                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2888  001638  CF83 F048          	movff	3971,lcdData@old_D	;volatile
  2889  00163C                     
  2890                           ;lcd.c: 80:     TRISD = 0x00;
  2891  00163C  0E00               	movlw	0
  2892  00163E  6E95               	movwf	149,c	;volatile
  2893  001640                     
  2894                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2895  001640  0E00               	movlw	0
  2896  001642  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2897  001644  0E22               	movlw	34
  2898  001646  6E41               	movwf	digitalWrite@pin^0,c
  2899  001648  0E00               	movlw	0
  2900  00164A  6E44               	movwf	(digitalWrite@value+1)^0,c
  2901  00164C  0E01               	movlw	1
  2902  00164E  6E43               	movwf	digitalWrite@value^0,c
  2903  001650  EC8C  F006         	call	_digitalWrite	;wreg free
  2904  001654                     
  2905                           ;lcd.c: 83:  PORTD = valor;
  2906  001654  C047  FF83         	movff	lcdData@valor,3971	;volatile
  2907  001658                     
  2908                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2909  001658  0E00               	movlw	0
  2910  00165A  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2911  00165C  0E21               	movlw	33
  2912  00165E  6E41               	movwf	digitalWrite@pin^0,c
  2913  001660  0E00               	movlw	0
  2914  001662  6E44               	movwf	(digitalWrite@value+1)^0,c
  2915  001664  0E01               	movlw	1
  2916  001666  6E43               	movwf	digitalWrite@value^0,c
  2917  001668  EC8C  F006         	call	_digitalWrite	;wreg free
  2918  00166C                     
  2919                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2920  00166C  0E00               	movlw	0
  2921  00166E  6E42               	movwf	(digitalWrite@pin+1)^0,c
  2922  001670  0E21               	movlw	33
  2923  001672  6E41               	movwf	digitalWrite@pin^0,c
  2924  001674  0E00               	movlw	0
  2925  001676  6E44               	movwf	(digitalWrite@value+1)^0,c
  2926  001678  0E00               	movlw	0
  2927  00167A  6E43               	movwf	digitalWrite@value^0,c
  2928  00167C  EC8C  F006         	call	_digitalWrite	;wreg free
  2929  001680                     
  2930                           ;lcd.c: 88:     PORTD= old_D;
  2931  001680  C048  FF83         	movff	lcdData@old_D,3971	;volatile
  2932  001684                     
  2933                           ;lcd.c: 90:  Delay40us();
  2934  001684  ECA7  F00B         	call	_Delay40us	;wreg free
  2935  001688  0012               	return		;funcret
  2936  00168A                     __end_of_lcdData:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _digitalWrite *****************
  2940 ;; Defined at:
  2941 ;;		line 14 in file "io.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  pin             2    0[COMRAM] int 
  2944 ;;  value           2    2[COMRAM] int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2956 ;;      Params:         4       0       0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0
  2958 ;;      Temps:          2       0       0       0       0       0       0
  2959 ;;      Totals:         6       0       0       0       0       0       0
  2960 ;;Total ram usage:        6 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_lcdCommand
  2966 ;;		_lcdData
  2967 ;;		_ssdUpdate
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text16
  2972  000D18                     __ptext16:
  2973                           	callstack 0
  2974  000D18                     _digitalWrite:
  2975                           	callstack 29
  2976  000D18                     
  2977                           ;io.c: 16:     if(pin <8){
  2978  000D18  BE42               	btfsc	(digitalWrite@pin+1)^0,7,c
  2979  000D1A  EF9A  F006         	goto	u1050
  2980  000D1E  5042               	movf	(digitalWrite@pin+1)^0,w,c
  2981  000D20  E107               	bnz	u1051
  2982  000D22  0E08               	movlw	8
  2983  000D24  5C41               	subwf	digitalWrite@pin^0,w,c
  2984  000D26  B0D8               	btfsc	status,0,c
  2985  000D28  EF98  F006         	goto	u1051
  2986  000D2C  EF9A  F006         	goto	u1050
  2987  000D30                     u1051:
  2988  000D30  EFC4  F006         	goto	l1628
  2989  000D34                     u1050:
  2990  000D34                     
  2991                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2992  000D34  5043               	movf	digitalWrite@value^0,w,c
  2993  000D36  1044               	iorwf	(digitalWrite@value+1)^0,w,c
  2994  000D38  B4D8               	btfsc	status,2,c
  2995  000D3A  EFA1  F006         	goto	u1061
  2996  000D3E  EFA3  F006         	goto	u1060
  2997  000D42                     u1061:
  2998  000D42  EFB3  F006         	goto	l1626
  2999  000D46                     u1060:
  3000  000D46  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3001  000D4A  0E01               	movlw	1
  3002  000D4C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3003  000D4E  2A45               	incf	??_digitalWrite^0,f,c
  3004  000D50  EFAC  F006         	goto	u1074
  3005  000D54                     u1075:
  3006  000D54  90D8               	bcf	status,0,c
  3007  000D56  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3008  000D58                     u1074:
  3009  000D58  2E45               	decfsz	??_digitalWrite^0,f,c
  3010  000D5A  EFAA  F006         	goto	u1075
  3011  000D5E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3012  000D60  1280               	iorwf	128,f,c	;volatile
  3013  000D62  EFB2  F007         	goto	l114
  3014  000D66                     l1626:
  3015  000D66  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3016  000D6A  0E01               	movlw	1
  3017  000D6C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3018  000D6E  2A45               	incf	??_digitalWrite^0,f,c
  3019  000D70  EFBC  F006         	goto	u1084
  3020  000D74                     u1085:
  3021  000D74  90D8               	bcf	status,0,c
  3022  000D76  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3023  000D78                     u1084:
  3024  000D78  2E45               	decfsz	??_digitalWrite^0,f,c
  3025  000D7A  EFBA  F006         	goto	u1085
  3026  000D7E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3027  000D80  0AFF               	xorlw	255
  3028  000D82  1680               	andwf	128,f,c	;volatile
  3029  000D84  EFB2  F007         	goto	l114
  3030  000D88                     l1628:
  3031  000D88  BE42               	btfsc	(digitalWrite@pin+1)^0,7,c
  3032  000D8A  EFD2  F006         	goto	u1090
  3033  000D8E  5042               	movf	(digitalWrite@pin+1)^0,w,c
  3034  000D90  E107               	bnz	u1091
  3035  000D92  0E10               	movlw	16
  3036  000D94  5C41               	subwf	digitalWrite@pin^0,w,c
  3037  000D96  B0D8               	btfsc	status,0,c
  3038  000D98  EFD0  F006         	goto	u1091
  3039  000D9C  EFD2  F006         	goto	u1090
  3040  000DA0                     u1091:
  3041  000DA0  EF00  F007         	goto	l1636
  3042  000DA4                     u1090:
  3043  000DA4                     
  3044                           ;io.c: 20:         pin -=8;
  3045  000DA4  0EF8               	movlw	248
  3046  000DA6  2641               	addwf	digitalWrite@pin^0,f,c
  3047  000DA8  0EFF               	movlw	255
  3048  000DAA  2242               	addwfc	(digitalWrite@pin+1)^0,f,c
  3049                           
  3050                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3051  000DAC  5043               	movf	digitalWrite@value^0,w,c
  3052  000DAE  1044               	iorwf	(digitalWrite@value+1)^0,w,c
  3053  000DB0  B4D8               	btfsc	status,2,c
  3054  000DB2  EFDD  F006         	goto	u1101
  3055  000DB6  EFDF  F006         	goto	u1100
  3056  000DBA                     u1101:
  3057  000DBA  EFEF  F006         	goto	l1634
  3058  000DBE                     u1100:
  3059  000DBE  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3060  000DC2  0E01               	movlw	1
  3061  000DC4  6E46               	movwf	(??_digitalWrite+1)^0,c
  3062  000DC6  2A45               	incf	??_digitalWrite^0,f,c
  3063  000DC8  EFE8  F006         	goto	u1114
  3064  000DCC                     u1115:
  3065  000DCC  90D8               	bcf	status,0,c
  3066  000DCE  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3067  000DD0                     u1114:
  3068  000DD0  2E45               	decfsz	??_digitalWrite^0,f,c
  3069  000DD2  EFE6  F006         	goto	u1115
  3070  000DD6  5046               	movf	(??_digitalWrite+1)^0,w,c
  3071  000DD8  1281               	iorwf	129,f,c	;volatile
  3072  000DDA  EFB2  F007         	goto	l114
  3073  000DDE                     l1634:
  3074  000DDE  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3075  000DE2  0E01               	movlw	1
  3076  000DE4  6E46               	movwf	(??_digitalWrite+1)^0,c
  3077  000DE6  2A45               	incf	??_digitalWrite^0,f,c
  3078  000DE8  EFF8  F006         	goto	u1124
  3079  000DEC                     u1125:
  3080  000DEC  90D8               	bcf	status,0,c
  3081  000DEE  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3082  000DF0                     u1124:
  3083  000DF0  2E45               	decfsz	??_digitalWrite^0,f,c
  3084  000DF2  EFF6  F006         	goto	u1125
  3085  000DF6  5046               	movf	(??_digitalWrite+1)^0,w,c
  3086  000DF8  0AFF               	xorlw	255
  3087  000DFA  1681               	andwf	129,f,c	;volatile
  3088  000DFC  EFB2  F007         	goto	l114
  3089  000E00                     l1636:
  3090  000E00  BE42               	btfsc	(digitalWrite@pin+1)^0,7,c
  3091  000E02  EF0E  F007         	goto	u1130
  3092  000E06  5042               	movf	(digitalWrite@pin+1)^0,w,c
  3093  000E08  E107               	bnz	u1131
  3094  000E0A  0E18               	movlw	24
  3095  000E0C  5C41               	subwf	digitalWrite@pin^0,w,c
  3096  000E0E  B0D8               	btfsc	status,0,c
  3097  000E10  EF0C  F007         	goto	u1131
  3098  000E14  EF0E  F007         	goto	u1130
  3099  000E18                     u1131:
  3100  000E18  EF3C  F007         	goto	l1644
  3101  000E1C                     u1130:
  3102  000E1C                     
  3103                           ;io.c: 24:         pin -=16;
  3104  000E1C  0EF0               	movlw	240
  3105  000E1E  2641               	addwf	digitalWrite@pin^0,f,c
  3106  000E20  0EFF               	movlw	255
  3107  000E22  2242               	addwfc	(digitalWrite@pin+1)^0,f,c
  3108                           
  3109                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3110  000E24  5043               	movf	digitalWrite@value^0,w,c
  3111  000E26  1044               	iorwf	(digitalWrite@value+1)^0,w,c
  3112  000E28  B4D8               	btfsc	status,2,c
  3113  000E2A  EF19  F007         	goto	u1141
  3114  000E2E  EF1B  F007         	goto	u1140
  3115  000E32                     u1141:
  3116  000E32  EF2B  F007         	goto	l1642
  3117  000E36                     u1140:
  3118  000E36  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3119  000E3A  0E01               	movlw	1
  3120  000E3C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3121  000E3E  2A45               	incf	??_digitalWrite^0,f,c
  3122  000E40  EF24  F007         	goto	u1154
  3123  000E44                     u1155:
  3124  000E44  90D8               	bcf	status,0,c
  3125  000E46  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3126  000E48                     u1154:
  3127  000E48  2E45               	decfsz	??_digitalWrite^0,f,c
  3128  000E4A  EF22  F007         	goto	u1155
  3129  000E4E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3130  000E50  1282               	iorwf	130,f,c	;volatile
  3131  000E52  EFB2  F007         	goto	l114
  3132  000E56                     l1642:
  3133  000E56  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3134  000E5A  0E01               	movlw	1
  3135  000E5C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3136  000E5E  2A45               	incf	??_digitalWrite^0,f,c
  3137  000E60  EF34  F007         	goto	u1164
  3138  000E64                     u1165:
  3139  000E64  90D8               	bcf	status,0,c
  3140  000E66  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3141  000E68                     u1164:
  3142  000E68  2E45               	decfsz	??_digitalWrite^0,f,c
  3143  000E6A  EF32  F007         	goto	u1165
  3144  000E6E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3145  000E70  0AFF               	xorlw	255
  3146  000E72  1682               	andwf	130,f,c	;volatile
  3147  000E74  EFB2  F007         	goto	l114
  3148  000E78                     l1644:
  3149  000E78  BE42               	btfsc	(digitalWrite@pin+1)^0,7,c
  3150  000E7A  EF4A  F007         	goto	u1170
  3151  000E7E  5042               	movf	(digitalWrite@pin+1)^0,w,c
  3152  000E80  E107               	bnz	u1171
  3153  000E82  0E20               	movlw	32
  3154  000E84  5C41               	subwf	digitalWrite@pin^0,w,c
  3155  000E86  B0D8               	btfsc	status,0,c
  3156  000E88  EF48  F007         	goto	u1171
  3157  000E8C  EF4A  F007         	goto	u1170
  3158  000E90                     u1171:
  3159  000E90  EF78  F007         	goto	l1652
  3160  000E94                     u1170:
  3161  000E94                     
  3162                           ;io.c: 28:         pin -=24;
  3163  000E94  0EE8               	movlw	232
  3164  000E96  2641               	addwf	digitalWrite@pin^0,f,c
  3165  000E98  0EFF               	movlw	255
  3166  000E9A  2242               	addwfc	(digitalWrite@pin+1)^0,f,c
  3167                           
  3168                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3169  000E9C  5043               	movf	digitalWrite@value^0,w,c
  3170  000E9E  1044               	iorwf	(digitalWrite@value+1)^0,w,c
  3171  000EA0  B4D8               	btfsc	status,2,c
  3172  000EA2  EF55  F007         	goto	u1181
  3173  000EA6  EF57  F007         	goto	u1180
  3174  000EAA                     u1181:
  3175  000EAA  EF67  F007         	goto	l1650
  3176  000EAE                     u1180:
  3177  000EAE  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3178  000EB2  0E01               	movlw	1
  3179  000EB4  6E46               	movwf	(??_digitalWrite+1)^0,c
  3180  000EB6  2A45               	incf	??_digitalWrite^0,f,c
  3181  000EB8  EF60  F007         	goto	u1194
  3182  000EBC                     u1195:
  3183  000EBC  90D8               	bcf	status,0,c
  3184  000EBE  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3185  000EC0                     u1194:
  3186  000EC0  2E45               	decfsz	??_digitalWrite^0,f,c
  3187  000EC2  EF5E  F007         	goto	u1195
  3188  000EC6  5046               	movf	(??_digitalWrite+1)^0,w,c
  3189  000EC8  1283               	iorwf	131,f,c	;volatile
  3190  000ECA  EFB2  F007         	goto	l114
  3191  000ECE                     l1650:
  3192  000ECE  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3193  000ED2  0E01               	movlw	1
  3194  000ED4  6E46               	movwf	(??_digitalWrite+1)^0,c
  3195  000ED6  2A45               	incf	??_digitalWrite^0,f,c
  3196  000ED8  EF70  F007         	goto	u1204
  3197  000EDC                     u1205:
  3198  000EDC  90D8               	bcf	status,0,c
  3199  000EDE  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3200  000EE0                     u1204:
  3201  000EE0  2E45               	decfsz	??_digitalWrite^0,f,c
  3202  000EE2  EF6E  F007         	goto	u1205
  3203  000EE6  5046               	movf	(??_digitalWrite+1)^0,w,c
  3204  000EE8  0AFF               	xorlw	255
  3205  000EEA  1683               	andwf	131,f,c	;volatile
  3206  000EEC  EFB2  F007         	goto	l114
  3207  000EF0                     l1652:
  3208  000EF0  BE42               	btfsc	(digitalWrite@pin+1)^0,7,c
  3209  000EF2  EF86  F007         	goto	u1210
  3210  000EF6  5042               	movf	(digitalWrite@pin+1)^0,w,c
  3211  000EF8  E107               	bnz	u1211
  3212  000EFA  0E28               	movlw	40
  3213  000EFC  5C41               	subwf	digitalWrite@pin^0,w,c
  3214  000EFE  B0D8               	btfsc	status,0,c
  3215  000F00  EF84  F007         	goto	u1211
  3216  000F04  EF86  F007         	goto	u1210
  3217  000F08                     u1211:
  3218  000F08  EFB2  F007         	goto	l114
  3219  000F0C                     u1210:
  3220  000F0C                     
  3221                           ;io.c: 32:         pin -=32;
  3222  000F0C  0EE0               	movlw	224
  3223  000F0E  2641               	addwf	digitalWrite@pin^0,f,c
  3224  000F10  0EFF               	movlw	255
  3225  000F12  2242               	addwfc	(digitalWrite@pin+1)^0,f,c
  3226                           
  3227                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3228  000F14  5043               	movf	digitalWrite@value^0,w,c
  3229  000F16  1044               	iorwf	(digitalWrite@value+1)^0,w,c
  3230  000F18  B4D8               	btfsc	status,2,c
  3231  000F1A  EF91  F007         	goto	u1221
  3232  000F1E  EF93  F007         	goto	u1220
  3233  000F22                     u1221:
  3234  000F22  EFA3  F007         	goto	l1658
  3235  000F26                     u1220:
  3236  000F26  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3237  000F2A  0E01               	movlw	1
  3238  000F2C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3239  000F2E  2A45               	incf	??_digitalWrite^0,f,c
  3240  000F30  EF9C  F007         	goto	u1234
  3241  000F34                     u1235:
  3242  000F34  90D8               	bcf	status,0,c
  3243  000F36  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3244  000F38                     u1234:
  3245  000F38  2E45               	decfsz	??_digitalWrite^0,f,c
  3246  000F3A  EF9A  F007         	goto	u1235
  3247  000F3E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3248  000F40  1284               	iorwf	132,f,c	;volatile
  3249  000F42  EFB2  F007         	goto	l114
  3250  000F46                     l1658:
  3251  000F46  C041  F045         	movff	digitalWrite@pin,??_digitalWrite
  3252  000F4A  0E01               	movlw	1
  3253  000F4C  6E46               	movwf	(??_digitalWrite+1)^0,c
  3254  000F4E  2A45               	incf	??_digitalWrite^0,f,c
  3255  000F50  EFAC  F007         	goto	u1244
  3256  000F54                     u1245:
  3257  000F54  90D8               	bcf	status,0,c
  3258  000F56  3646               	rlcf	(??_digitalWrite+1)^0,f,c
  3259  000F58                     u1244:
  3260  000F58  2E45               	decfsz	??_digitalWrite^0,f,c
  3261  000F5A  EFAA  F007         	goto	u1245
  3262  000F5E  5046               	movf	(??_digitalWrite+1)^0,w,c
  3263  000F60  0AFF               	xorlw	255
  3264  000F62  1684               	andwf	132,f,c	;volatile
  3265  000F64                     l114:
  3266  000F64  0012               	return		;funcret
  3267  000F66                     __end_of_digitalWrite:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _Delay40us *****************
  3271 ;; Defined at:
  3272 ;;		line 31 in file "lcd.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  i               1    0[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3286 ;;      Params:         0       0       0       0       0       0       0
  3287 ;;      Locals:         1       0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0
  3289 ;;      Totals:         1       0       0       0       0       0       0
  3290 ;;Total ram usage:        1 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_Delay2ms
  3296 ;;		_lcdCommand
  3297 ;;		_lcdData
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text17
  3302  00174E                     __ptext17:
  3303                           	callstack 0
  3304  00174E                     _Delay40us:
  3305                           	callstack 28
  3306  00174E                     
  3307                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  3308  00174E  0E00               	movlw	0
  3309  001750  6E41               	movwf	Delay40us@i^0,c
  3310  001752                     l1616:
  3311  001752  2A41               	incf	Delay40us@i^0,f,c
  3312  001754  0E18               	movlw	24
  3313  001756  6441               	cpfsgt	Delay40us@i^0,c
  3314  001758  EFB0  F00B         	goto	u1041
  3315  00175C  EFB2  F00B         	goto	u1040
  3316  001760                     u1041:
  3317  001760  EFA9  F00B         	goto	l1616
  3318  001764                     u1040:
  3319  001764  0012               	return		;funcret
  3320  001766                     __end_of_Delay40us:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _kpRead *****************
  3324 ;; Defined at:
  3325 ;;		line 35 in file "keypad.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  2    0[COMRAM] unsigned int 
  3332 ;; Registers used:
  3333 ;;		None
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         2       0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0
  3342 ;;      Totals:         2       0       0       0       0       0       0
  3343 ;;Total ram usage:        2 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text18
  3353  00178A                     __ptext18:
  3354                           	callstack 0
  3355  00178A                     _kpRead:
  3356                           	callstack 30
  3357  00178A                     
  3358                           ;keypad.c: 36:     return valor;
  3359  00178A  C05F  F041         	movff	_valor,?_kpRead
  3360  00178E  C060  F042         	movff	_valor+1,?_kpRead+1
  3361  001792  0012               	return		;funcret
  3362  001794                     __end_of_kpRead:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _kpInit *****************
  3366 ;; Defined at:
  3367 ;;		line 87 in file "keypad.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3381 ;;      Params:         0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text19
  3395  001794                     __ptext19:
  3396                           	callstack 0
  3397  001794                     _kpInit:
  3398                           	callstack 30
  3399  001794                     
  3400                           ;keypad.c: 89:     TRISB &= 0x07;
  3401  001794  0E07               	movlw	7
  3402  001796  1693               	andwf	147,f,c	;volatile
  3403                           
  3404                           ;keypad.c: 91:     TRISD |= 0x0f;
  3405  001798  0E0F               	movlw	15
  3406  00179A  1295               	iorwf	149,f,c	;volatile
  3407  00179C  0012               	return		;funcret
  3408  00179E                     __end_of_kpInit:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _kpDebounce *****************
  3412 ;; Defined at:
  3413 ;;		line 39 in file "keypad.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  k               2    6[COMRAM] int 
  3418 ;;  i               1    9[COMRAM] unsigned char 
  3419 ;;  j               1    8[COMRAM] unsigned char 
  3420 ;;  old_D           1    5[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, prodl, prodh
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3430 ;;      Params:         0       0       0       0       0       0       0
  3431 ;;      Locals:         5       0       0       0       0       0       0
  3432 ;;      Temps:          5       0       0       0       0       0       0
  3433 ;;      Totals:        10       0       0       0       0       0       0
  3434 ;;Total ram usage:       10 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text20
  3444  000F66                     __ptext20:
  3445                           	callstack 0
  3446  000F66                     _kpDebounce:
  3447                           	callstack 30
  3448  000F66                     
  3449                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3450  000F66  CF83 F046          	movff	3971,kpDebounce@old_D	;volatile
  3451  000F6A                     
  3452                           ;keypad.c: 51:     TRISD |= 0x0f;
  3453  000F6A  0E0F               	movlw	15
  3454  000F6C  1295               	iorwf	149,f,c	;volatile
  3455  000F6E                     
  3456                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3457  000F6E  0E00               	movlw	0
  3458  000F70  6E4A               	movwf	kpDebounce@i^0,c
  3459  000F72                     l1834:
  3460                           
  3461                           ;keypad.c: 55:         TRISB &= 0xF8;
  3462  000F72  0EF8               	movlw	248
  3463  000F74  1693               	andwf	147,f,c	;volatile
  3464                           
  3465                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3466  000F76  C04A  F041         	movff	kpDebounce@i,??_kpDebounce
  3467  000F7A  0E01               	movlw	1
  3468  000F7C  6E42               	movwf	(??_kpDebounce+1)^0,c
  3469  000F7E  2A41               	incf	??_kpDebounce^0,f,c
  3470  000F80  EFC4  F007         	goto	u1514
  3471  000F84                     u1515:
  3472  000F84  90D8               	bcf	status,0,c
  3473  000F86  3642               	rlcf	(??_kpDebounce+1)^0,f,c
  3474  000F88                     u1514:
  3475  000F88  2E41               	decfsz	??_kpDebounce^0,f,c
  3476  000F8A  EFC2  F007         	goto	u1515
  3477  000F8E  5042               	movf	(??_kpDebounce+1)^0,w,c
  3478  000F90  1293               	iorwf	147,f,c	;volatile
  3479                           
  3480                           ;keypad.c: 59:         PORTB |= 0x07;
  3481  000F92  0E07               	movlw	7
  3482  000F94  1281               	iorwf	129,f,c	;volatile
  3483                           
  3484                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3485  000F96  C04A  F041         	movff	kpDebounce@i,??_kpDebounce
  3486  000F9A  0E01               	movlw	1
  3487  000F9C  6E42               	movwf	(??_kpDebounce+1)^0,c
  3488  000F9E  2A41               	incf	??_kpDebounce^0,f,c
  3489  000FA0  EFD4  F007         	goto	u1524
  3490  000FA4                     u1525:
  3491  000FA4  90D8               	bcf	status,0,c
  3492  000FA6  3642               	rlcf	(??_kpDebounce+1)^0,f,c
  3493  000FA8                     u1524:
  3494  000FA8  2E41               	decfsz	??_kpDebounce^0,f,c
  3495  000FAA  EFD2  F007         	goto	u1525
  3496  000FAE  5042               	movf	(??_kpDebounce+1)^0,w,c
  3497  000FB0  0AFF               	xorlw	255
  3498  000FB2  1681               	andwf	129,f,c	;volatile
  3499  000FB4                     
  3500                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3501  000FB4  0E00               	movlw	0
  3502  000FB6  6E48               	movwf	(kpDebounce@k+1)^0,c
  3503  000FB8  0E00               	movlw	0
  3504  000FBA  6E47               	movwf	kpDebounce@k^0,c
  3505  000FBC                     l1842:
  3506  000FBC  4A47               	infsnz	kpDebounce@k^0,f,c
  3507  000FBE  2A48               	incf	(kpDebounce@k+1)^0,f,c
  3508  000FC0  BE48               	btfsc	(kpDebounce@k+1)^0,7,c
  3509  000FC2  EFEC  F007         	goto	u1531
  3510  000FC6  5048               	movf	(kpDebounce@k+1)^0,w,c
  3511  000FC8  E109               	bnz	u1530
  3512  000FCA  0E0A               	movlw	10
  3513  000FCC  5C47               	subwf	kpDebounce@k^0,w,c
  3514  000FCE  A0D8               	btfss	status,0,c
  3515  000FD0  EFEC  F007         	goto	u1531
  3516  000FD4  EFEE  F007         	goto	u1530
  3517  000FD8                     u1531:
  3518  000FD8  EFDE  F007         	goto	l1842
  3519  000FDC                     u1530:
  3520  000FDC                     
  3521                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3522  000FDC  0E00               	movlw	0
  3523  000FDE  6E49               	movwf	kpDebounce@j^0,c
  3524  000FE0                     l1852:
  3525                           
  3526                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3527  000FE0  C049  F041         	movff	kpDebounce@j,??_kpDebounce
  3528  000FE4  0E01               	movlw	1
  3529  000FE6  6E42               	movwf	(??_kpDebounce+1)^0,c
  3530  000FE8  2A41               	incf	??_kpDebounce^0,f,c
  3531  000FEA  EFF9  F007         	goto	u1544
  3532  000FEE                     u1545:
  3533  000FEE  90D8               	bcf	status,0,c
  3534  000FF0  3642               	rlcf	(??_kpDebounce+1)^0,f,c
  3535  000FF2                     u1544:
  3536  000FF2  2E41               	decfsz	??_kpDebounce^0,f,c
  3537  000FF4  EFF7  F007         	goto	u1545
  3538  000FF8  5042               	movf	(??_kpDebounce+1)^0,w,c
  3539  000FFA  1483               	andwf	131,w,c	;volatile
  3540  000FFC  0900               	iorlw	0
  3541  000FFE  A4D8               	btfss	status,2,c
  3542  001000  EF04  F008         	goto	u1551
  3543  001004  EF06  F008         	goto	u1550
  3544  001008                     u1551:
  3545  001008  EF1E  F008         	goto	l1856
  3546  00100C                     u1550:
  3547  00100C                     
  3548                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3549  00100C  504A               	movf	kpDebounce@i^0,w,c
  3550  00100E  0D04               	mullw	4
  3551  001010  50F3               	movf	243,w,c
  3552  001012  2449               	addwf	kpDebounce@j^0,w,c
  3553  001014  6E41               	movwf	??_kpDebounce^0,c
  3554  001016  0E01               	movlw	1
  3555  001018  6E42               	movwf	(??_kpDebounce+1)^0,c
  3556  00101A  0E00               	movlw	0
  3557  00101C  6E43               	movwf	(??_kpDebounce+2)^0,c
  3558  00101E  2A41               	incf	??_kpDebounce^0,f,c
  3559  001020  EF15  F008         	goto	u1564
  3560  001024                     u1565:
  3561  001024  90D8               	bcf	status,0,c
  3562  001026  3642               	rlcf	(??_kpDebounce+1)^0,f,c
  3563  001028  3643               	rlcf	(??_kpDebounce+2)^0,f,c
  3564  00102A                     u1564:
  3565  00102A  2E41               	decfsz	??_kpDebounce^0,f,c
  3566  00102C  EF12  F008         	goto	u1565
  3567  001030  5042               	movf	(??_kpDebounce+1)^0,w,c
  3568  001032  125D               	iorwf	kpDebounce@valorNovo^0,f,c
  3569  001034  5043               	movf	(??_kpDebounce+2)^0,w,c
  3570  001036  125E               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3571                           
  3572                           ;keypad.c: 69:             } else {
  3573  001038  EF38  F008         	goto	l1858
  3574  00103C                     l1856:
  3575                           
  3576                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3577  00103C  504A               	movf	kpDebounce@i^0,w,c
  3578  00103E  0D04               	mullw	4
  3579  001040  50F3               	movf	243,w,c
  3580  001042  2449               	addwf	kpDebounce@j^0,w,c
  3581  001044  6E41               	movwf	??_kpDebounce^0,c
  3582  001046  0E01               	movlw	1
  3583  001048  6E42               	movwf	(??_kpDebounce+1)^0,c
  3584  00104A  0E00               	movlw	0
  3585  00104C  6E43               	movwf	(??_kpDebounce+2)^0,c
  3586  00104E  2A41               	incf	??_kpDebounce^0,f,c
  3587  001050  EF2D  F008         	goto	u1574
  3588  001054                     u1575:
  3589  001054  90D8               	bcf	status,0,c
  3590  001056  3642               	rlcf	(??_kpDebounce+1)^0,f,c
  3591  001058  3643               	rlcf	(??_kpDebounce+2)^0,f,c
  3592  00105A                     u1574:
  3593  00105A  2E41               	decfsz	??_kpDebounce^0,f,c
  3594  00105C  EF2A  F008         	goto	u1575
  3595  001060  1C42               	comf	(??_kpDebounce+1)^0,w,c
  3596  001062  6E44               	movwf	(??_kpDebounce+3)^0,c
  3597  001064  1C43               	comf	(??_kpDebounce+2)^0,w,c
  3598  001066  6E45               	movwf	(??_kpDebounce+4)^0,c
  3599  001068  5044               	movf	(??_kpDebounce+3)^0,w,c
  3600  00106A  165D               	andwf	kpDebounce@valorNovo^0,f,c
  3601  00106C  5045               	movf	(??_kpDebounce+4)^0,w,c
  3602  00106E  165E               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3603  001070                     l1858:
  3604                           
  3605                           ;keypad.c: 72:         }
  3606  001070  2A49               	incf	kpDebounce@j^0,f,c
  3607  001072  0E03               	movlw	3
  3608  001074  6449               	cpfsgt	kpDebounce@j^0,c
  3609  001076  EF3F  F008         	goto	u1581
  3610  00107A  EF41  F008         	goto	u1580
  3611  00107E                     u1581:
  3612  00107E  EFF0  F007         	goto	l1852
  3613  001082                     u1580:
  3614  001082                     
  3615                           ;keypad.c: 73:     }
  3616  001082  2A4A               	incf	kpDebounce@i^0,f,c
  3617  001084  0E02               	movlw	2
  3618  001086  644A               	cpfsgt	kpDebounce@i^0,c
  3619  001088  EF48  F008         	goto	u1591
  3620  00108C  EF4A  F008         	goto	u1590
  3621  001090                     u1591:
  3622  001090  EFB9  F007         	goto	l1834
  3623  001094                     u1590:
  3624  001094                     
  3625                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3626  001094  505D               	movf	kpDebounce@valorNovo^0,w,c
  3627  001096  185B               	xorwf	kpDebounce@valorAntigo^0,w,c
  3628  001098  E107               	bnz	u1601
  3629  00109A  505E               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3630  00109C  185C               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3631  00109E  A4D8               	btfss	status,2,c
  3632  0010A0  EF54  F008         	goto	u1601
  3633  0010A4  EF56  F008         	goto	u1600
  3634  0010A8                     u1601:
  3635  0010A8  EF59  F008         	goto	l1870
  3636  0010AC                     u1600:
  3637  0010AC                     
  3638                           ;keypad.c: 75:         tempo--;
  3639  0010AC  0666               	decf	kpDebounce@tempo^0,f,c
  3640                           
  3641                           ;keypad.c: 76:     } else {
  3642  0010AE  EF5F  F008         	goto	l179
  3643  0010B2                     l1870:
  3644                           
  3645                           ;keypad.c: 77:         tempo = 10;
  3646  0010B2  0E0A               	movlw	10
  3647  0010B4  6E66               	movwf	kpDebounce@tempo^0,c
  3648  0010B6                     
  3649                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3650  0010B6  C05D  F05B         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3651  0010BA  C05E  F05C         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3652  0010BE                     l179:
  3653                           
  3654                           ;keypad.c: 80:     if (tempo == 0) {
  3655  0010BE  5066               	movf	kpDebounce@tempo^0,w,c
  3656  0010C0  A4D8               	btfss	status,2,c
  3657  0010C2  EF65  F008         	goto	u1611
  3658  0010C6  EF67  F008         	goto	u1610
  3659  0010CA                     u1611:
  3660  0010CA  EF6B  F008         	goto	l180
  3661  0010CE                     u1610:
  3662  0010CE                     
  3663                           ;keypad.c: 81:         valor = valorAntigo;
  3664  0010CE  C05B  F05F         	movff	kpDebounce@valorAntigo,_valor
  3665  0010D2  C05C  F060         	movff	kpDebounce@valorAntigo+1,_valor+1
  3666  0010D6                     l180:
  3667                           
  3668                           ;keypad.c: 83:     PORTD = old_D;
  3669  0010D6  C046  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3670  0010DA                     
  3671                           ;keypad.c: 84:     TRISD = 0x00;
  3672  0010DA  0E00               	movlw	0
  3673  0010DC  6E95               	movwf	149,c	;volatile
  3674  0010DE  0012               	return		;funcret
  3675  0010E0                     __end_of_kpDebounce:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function ___llmod *****************
  3679 ;; Defined at:
  3680 ;;		line 7 in file "A:\Microchip\xc8\v2.20\pic\sources\c99\common\llmod.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  dividend        4   13[COMRAM] unsigned long 
  3683 ;;  divisor         4   17[COMRAM] unsigned long 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  counter         1   21[COMRAM] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  4   13[COMRAM] unsigned long 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3695 ;;      Params:         8       0       0       0       0       0       0
  3696 ;;      Locals:         1       0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0
  3698 ;;      Totals:         9       0       0       0       0       0       0
  3699 ;;Total ram usage:        9 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text21
  3709  0012D4                     __ptext21:
  3710                           	callstack 0
  3711  0012D4                     ___llmod:
  3712                           	callstack 30
  3713  0012D4  5052               	movf	___llmod@divisor^0,w,c
  3714  0012D6  1053               	iorwf	(___llmod@divisor+1)^0,w,c
  3715  0012D8  1054               	iorwf	(___llmod@divisor+2)^0,w,c
  3716  0012DA  1055               	iorwf	(___llmod@divisor+3)^0,w,c
  3717  0012DC  B4D8               	btfsc	status,2,c
  3718  0012DE  EF73  F009         	goto	u1701
  3719  0012E2  EF75  F009         	goto	u1700
  3720  0012E6                     u1701:
  3721  0012E6  EFA5  F009         	goto	l727
  3722  0012EA                     u1700:
  3723  0012EA  0E01               	movlw	1
  3724  0012EC  6E56               	movwf	___llmod@counter^0,c
  3725  0012EE  EF7F  F009         	goto	l1996
  3726  0012F2                     l1994:
  3727  0012F2  90D8               	bcf	status,0,c
  3728  0012F4  3652               	rlcf	___llmod@divisor^0,f,c
  3729  0012F6  3653               	rlcf	(___llmod@divisor+1)^0,f,c
  3730  0012F8  3654               	rlcf	(___llmod@divisor+2)^0,f,c
  3731  0012FA  3655               	rlcf	(___llmod@divisor+3)^0,f,c
  3732  0012FC  2A56               	incf	___llmod@counter^0,f,c
  3733  0012FE                     l1996:
  3734  0012FE  AE55               	btfss	(___llmod@divisor+3)^0,7,c
  3735  001300  EF84  F009         	goto	u1711
  3736  001304  EF86  F009         	goto	u1710
  3737  001308                     u1711:
  3738  001308  EF79  F009         	goto	l1994
  3739  00130C                     u1710:
  3740  00130C                     l1998:
  3741  00130C  5052               	movf	___llmod@divisor^0,w,c
  3742  00130E  5C4E               	subwf	___llmod@dividend^0,w,c
  3743  001310  5053               	movf	(___llmod@divisor+1)^0,w,c
  3744  001312  584F               	subwfb	(___llmod@dividend+1)^0,w,c
  3745  001314  5054               	movf	(___llmod@divisor+2)^0,w,c
  3746  001316  5850               	subwfb	(___llmod@dividend+2)^0,w,c
  3747  001318  5055               	movf	(___llmod@divisor+3)^0,w,c
  3748  00131A  5851               	subwfb	(___llmod@dividend+3)^0,w,c
  3749  00131C  A0D8               	btfss	status,0,c
  3750  00131E  EF93  F009         	goto	u1721
  3751  001322  EF95  F009         	goto	u1720
  3752  001326                     u1721:
  3753  001326  EF9D  F009         	goto	l2002
  3754  00132A                     u1720:
  3755  00132A  5052               	movf	___llmod@divisor^0,w,c
  3756  00132C  5E4E               	subwf	___llmod@dividend^0,f,c
  3757  00132E  5053               	movf	(___llmod@divisor+1)^0,w,c
  3758  001330  5A4F               	subwfb	(___llmod@dividend+1)^0,f,c
  3759  001332  5054               	movf	(___llmod@divisor+2)^0,w,c
  3760  001334  5A50               	subwfb	(___llmod@dividend+2)^0,f,c
  3761  001336  5055               	movf	(___llmod@divisor+3)^0,w,c
  3762  001338  5A51               	subwfb	(___llmod@dividend+3)^0,f,c
  3763  00133A                     l2002:
  3764  00133A  90D8               	bcf	status,0,c
  3765  00133C  3255               	rrcf	(___llmod@divisor+3)^0,f,c
  3766  00133E  3254               	rrcf	(___llmod@divisor+2)^0,f,c
  3767  001340  3253               	rrcf	(___llmod@divisor+1)^0,f,c
  3768  001342  3252               	rrcf	___llmod@divisor^0,f,c
  3769  001344  2E56               	decfsz	___llmod@counter^0,f,c
  3770  001346  EF86  F009         	goto	l1998
  3771  00134A                     l727:
  3772  00134A  C04E  F04E         	movff	___llmod@dividend,?___llmod
  3773  00134E  C04F  F04F         	movff	___llmod@dividend+1,?___llmod+1
  3774  001352  C050  F050         	movff	___llmod@dividend+2,?___llmod+2
  3775  001356  C051  F051         	movff	___llmod@dividend+3,?___llmod+3
  3776  00135A  0012               	return		;funcret
  3777  00135C                     __end_of___llmod:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function ___lldiv *****************
  3781 ;; Defined at:
  3782 ;;		line 7 in file "A:\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  dividend        4    0[COMRAM] unsigned long 
  3785 ;;  divisor         4    4[COMRAM] unsigned long 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  quotient        4    8[COMRAM] unsigned long 
  3788 ;;  counter         1   12[COMRAM] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  4    0[COMRAM] unsigned long 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3798 ;;      Params:         8       0       0       0       0       0       0
  3799 ;;      Locals:         5       0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0
  3801 ;;      Totals:        13       0       0       0       0       0       0
  3802 ;;Total ram usage:       13 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text22
  3812  001230                     __ptext22:
  3813                           	callstack 0
  3814  001230                     ___lldiv:
  3815                           	callstack 30
  3816  001230  0E00               	movlw	0
  3817  001232  6E49               	movwf	___lldiv@quotient^0,c
  3818  001234  0E00               	movlw	0
  3819  001236  6E4A               	movwf	(___lldiv@quotient+1)^0,c
  3820  001238  0E00               	movlw	0
  3821  00123A  6E4B               	movwf	(___lldiv@quotient+2)^0,c
  3822  00123C  0E00               	movlw	0
  3823  00123E  6E4C               	movwf	(___lldiv@quotient+3)^0,c
  3824  001240  5045               	movf	___lldiv@divisor^0,w,c
  3825  001242  1046               	iorwf	(___lldiv@divisor+1)^0,w,c
  3826  001244  1047               	iorwf	(___lldiv@divisor+2)^0,w,c
  3827  001246  1048               	iorwf	(___lldiv@divisor+3)^0,w,c
  3828  001248  B4D8               	btfsc	status,2,c
  3829  00124A  EF29  F009         	goto	u1671
  3830  00124E  EF2B  F009         	goto	u1670
  3831  001252                     u1671:
  3832  001252  EF61  F009         	goto	l334
  3833  001256                     u1670:
  3834  001256  0E01               	movlw	1
  3835  001258  6E4D               	movwf	___lldiv@counter^0,c
  3836  00125A  EF35  F009         	goto	l1976
  3837  00125E                     l1974:
  3838  00125E  90D8               	bcf	status,0,c
  3839  001260  3645               	rlcf	___lldiv@divisor^0,f,c
  3840  001262  3646               	rlcf	(___lldiv@divisor+1)^0,f,c
  3841  001264  3647               	rlcf	(___lldiv@divisor+2)^0,f,c
  3842  001266  3648               	rlcf	(___lldiv@divisor+3)^0,f,c
  3843  001268  2A4D               	incf	___lldiv@counter^0,f,c
  3844  00126A                     l1976:
  3845  00126A  AE48               	btfss	(___lldiv@divisor+3)^0,7,c
  3846  00126C  EF3A  F009         	goto	u1681
  3847  001270  EF3C  F009         	goto	u1680
  3848  001274                     u1681:
  3849  001274  EF2F  F009         	goto	l1974
  3850  001278                     u1680:
  3851  001278                     l1978:
  3852  001278  90D8               	bcf	status,0,c
  3853  00127A  3649               	rlcf	___lldiv@quotient^0,f,c
  3854  00127C  364A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3855  00127E  364B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3856  001280  364C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3857  001282  5045               	movf	___lldiv@divisor^0,w,c
  3858  001284  5C41               	subwf	___lldiv@dividend^0,w,c
  3859  001286  5046               	movf	(___lldiv@divisor+1)^0,w,c
  3860  001288  5842               	subwfb	(___lldiv@dividend+1)^0,w,c
  3861  00128A  5047               	movf	(___lldiv@divisor+2)^0,w,c
  3862  00128C  5843               	subwfb	(___lldiv@dividend+2)^0,w,c
  3863  00128E  5048               	movf	(___lldiv@divisor+3)^0,w,c
  3864  001290  5844               	subwfb	(___lldiv@dividend+3)^0,w,c
  3865  001292  A0D8               	btfss	status,0,c
  3866  001294  EF4E  F009         	goto	u1691
  3867  001298  EF50  F009         	goto	u1690
  3868  00129C                     u1691:
  3869  00129C  EF59  F009         	goto	l1986
  3870  0012A0                     u1690:
  3871  0012A0  5045               	movf	___lldiv@divisor^0,w,c
  3872  0012A2  5E41               	subwf	___lldiv@dividend^0,f,c
  3873  0012A4  5046               	movf	(___lldiv@divisor+1)^0,w,c
  3874  0012A6  5A42               	subwfb	(___lldiv@dividend+1)^0,f,c
  3875  0012A8  5047               	movf	(___lldiv@divisor+2)^0,w,c
  3876  0012AA  5A43               	subwfb	(___lldiv@dividend+2)^0,f,c
  3877  0012AC  5048               	movf	(___lldiv@divisor+3)^0,w,c
  3878  0012AE  5A44               	subwfb	(___lldiv@dividend+3)^0,f,c
  3879  0012B0  8049               	bsf	___lldiv@quotient^0,0,c
  3880  0012B2                     l1986:
  3881  0012B2  90D8               	bcf	status,0,c
  3882  0012B4  3248               	rrcf	(___lldiv@divisor+3)^0,f,c
  3883  0012B6  3247               	rrcf	(___lldiv@divisor+2)^0,f,c
  3884  0012B8  3246               	rrcf	(___lldiv@divisor+1)^0,f,c
  3885  0012BA  3245               	rrcf	___lldiv@divisor^0,f,c
  3886  0012BC  2E4D               	decfsz	___lldiv@counter^0,f,c
  3887  0012BE  EF3C  F009         	goto	l1978
  3888  0012C2                     l334:
  3889  0012C2  C049  F041         	movff	___lldiv@quotient,?___lldiv
  3890  0012C6  C04A  F042         	movff	___lldiv@quotient+1,?___lldiv+1
  3891  0012CA  C04B  F043         	movff	___lldiv@quotient+2,?___lldiv+2
  3892  0012CE  C04C  F044         	movff	___lldiv@quotient+3,?___lldiv+3
  3893  0012D2  0012               	return		;funcret
  3894  0012D4                     __end_of___lldiv:
  3895                           	callstack 0
  3896                           
  3897                           	psect	rparam
  3898  0000                     
  3899                           	psect	idloc
  3900                           
  3901                           ;Config register IDLOC0 @ 0x200000
  3902                           ;	unspecified, using default values
  3903  200000                     	org	2097152
  3904  200000  FF                 	db	255
  3905                           
  3906                           ;Config register IDLOC1 @ 0x200001
  3907                           ;	unspecified, using default values
  3908  200001                     	org	2097153
  3909  200001  FF                 	db	255
  3910                           
  3911                           ;Config register IDLOC2 @ 0x200002
  3912                           ;	unspecified, using default values
  3913  200002                     	org	2097154
  3914  200002  FF                 	db	255
  3915                           
  3916                           ;Config register IDLOC3 @ 0x200003
  3917                           ;	unspecified, using default values
  3918  200003                     	org	2097155
  3919  200003  FF                 	db	255
  3920                           
  3921                           ;Config register IDLOC4 @ 0x200004
  3922                           ;	unspecified, using default values
  3923  200004                     	org	2097156
  3924  200004  FF                 	db	255
  3925                           
  3926                           ;Config register IDLOC5 @ 0x200005
  3927                           ;	unspecified, using default values
  3928  200005                     	org	2097157
  3929  200005  FF                 	db	255
  3930                           
  3931                           ;Config register IDLOC6 @ 0x200006
  3932                           ;	unspecified, using default values
  3933  200006                     	org	2097158
  3934  200006  FF                 	db	255
  3935                           
  3936                           ;Config register IDLOC7 @ 0x200007
  3937                           ;	unspecified, using default values
  3938  200007                     	org	2097159
  3939  200007  FF                 	db	255
  3940                           
  3941                           	psect	config
  3942                           
  3943                           ; Padding undefined space
  3944  300000                     	org	3145728
  3945  300000  FF                 	db	255
  3946                           
  3947                           ;Config register CONFIG1H @ 0x300001
  3948                           ;	Oscillator Selection bits
  3949                           ;	OSC = HS, HS oscillator
  3950                           ;	Fail-Safe Clock Monitor Enable bit
  3951                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3952                           ;	Internal/External Oscillator Switchover bit
  3953                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3954  300001                     	org	3145729
  3955  300001  02                 	db	2
  3956                           
  3957                           ;Config register CONFIG2L @ 0x300002
  3958                           ;	Power-up Timer Enable bit
  3959                           ;	PWRT = OFF, PWRT disabled
  3960                           ;	Brown-out Reset Enable bits
  3961                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3962                           ;	Brown Out Reset Voltage bits
  3963                           ;	BORV = 0x2E, user specified literal
  3964  300002                     	org	3145730
  3965  300002  71                 	db	369
  3966                           
  3967                           ;Config register CONFIG2H @ 0x300003
  3968                           ;	Watchdog Timer Enable bit
  3969                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3970                           ;	Watchdog Timer Postscale Select bits
  3971                           ;	WDTPS = 1, 1:1
  3972  300003                     	org	3145731
  3973  300003  00                 	db	0
  3974                           
  3975                           ; Padding undefined space
  3976  300004                     	org	3145732
  3977  300004  FF                 	db	255
  3978                           
  3979                           ;Config register CONFIG3H @ 0x300005
  3980                           ;	CCP2 MUX bit
  3981                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3982                           ;	PORTB A/D Enable bit
  3983                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3984                           ;	Low-Power Timer1 Oscillator Enable bit
  3985                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3986                           ;	MCLR Pin Enable bit
  3987                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3988  300005                     	org	3145733
  3989  300005  83                 	db	131
  3990                           
  3991                           ;Config register CONFIG4L @ 0x300006
  3992                           ;	Stack Full/Underflow Reset Enable bit
  3993                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3994                           ;	Single-Supply ICSP Enable bit
  3995                           ;	LVP = OFF, Single-Supply ICSP disabled
  3996                           ;	Extended Instruction Set Enable bit
  3997                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3998                           ;	Background Debugger Enable bit
  3999                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4000  300006                     	org	3145734
  4001  300006  80                 	db	128
  4002                           
  4003                           ; Padding undefined space
  4004  300007                     	org	3145735
  4005  300007  FF                 	db	255
  4006                           
  4007                           ;Config register CONFIG5L @ 0x300008
  4008                           ;	Code Protection bit
  4009                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4010                           ;	Code Protection bit
  4011                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4012                           ;	Code Protection bit
  4013                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4014                           ;	Code Protection bit
  4015                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4016  300008                     	org	3145736
  4017  300008  0F                 	db	15
  4018                           
  4019                           ;Config register CONFIG5H @ 0x300009
  4020                           ;	Boot Block Code Protection bit
  4021                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4022                           ;	Data EEPROM Code Protection bit
  4023                           ;	CPD = OFF, Data EEPROM not code-protected
  4024  300009                     	org	3145737
  4025  300009  C0                 	db	192
  4026                           
  4027                           ;Config register CONFIG6L @ 0x30000A
  4028                           ;	Write Protection bit
  4029                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4030                           ;	Write Protection bit
  4031                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4032                           ;	Write Protection bit
  4033                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4034                           ;	Write Protection bit
  4035                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4036  30000A                     	org	3145738
  4037  30000A  0F                 	db	15
  4038                           
  4039                           ;Config register CONFIG6H @ 0x30000B
  4040                           ;	Configuration Register Write Protection bit
  4041                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4042                           ;	Boot Block Write Protection bit
  4043                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4044                           ;	Data EEPROM Write Protection bit
  4045                           ;	WRTD = OFF, Data EEPROM not write-protected
  4046  30000B                     	org	3145739
  4047  30000B  E0                 	db	224
  4048                           
  4049                           ;Config register CONFIG7L @ 0x30000C
  4050                           ;	Table Read Protection bit
  4051                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4052                           ;	Table Read Protection bit
  4053                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4054                           ;	Table Read Protection bit
  4055                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4056                           ;	Table Read Protection bit
  4057                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4058  30000C                     	org	3145740
  4059  30000C  0F                 	db	15
  4060                           
  4061                           ;Config register CONFIG7H @ 0x30000D
  4062                           ;	Boot Block Table Read Protection bit
  4063                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4064  30000D                     	org	3145741
  4065  30000D  40                 	db	64
  4066                           tosu	equ	0xFFF
  4067                           tosh	equ	0xFFE
  4068                           tosl	equ	0xFFD
  4069                           stkptr	equ	0xFFC
  4070                           pclatu	equ	0xFFB
  4071                           pclath	equ	0xFFA
  4072                           pcl	equ	0xFF9
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           prodh	equ	0xFF4
  4078                           prodl	equ	0xFF3
  4079                           indf0	equ	0xFEF
  4080                           postinc0	equ	0xFEE
  4081                           postdec0	equ	0xFED
  4082                           preinc0	equ	0xFEC
  4083                           plusw0	equ	0xFEB
  4084                           fsr0h	equ	0xFEA
  4085                           fsr0l	equ	0xFE9
  4086                           wreg	equ	0xFE8
  4087                           indf1	equ	0xFE7
  4088                           postinc1	equ	0xFE6
  4089                           postdec1	equ	0xFE5
  4090                           preinc1	equ	0xFE4
  4091                           plusw1	equ	0xFE3
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           bsr	equ	0xFE0
  4095                           indf2	equ	0xFDF
  4096                           postinc2	equ	0xFDE
  4097                           postdec2	equ	0xFDD
  4098                           preinc2	equ	0xFDC
  4099                           plusw2	equ	0xFDB
  4100                           fsr2h	equ	0xFDA
  4101                           fsr2l	equ	0xFD9
  4102                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        96
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26     102
    BANK0           128    108     108
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___llmod
    _pwmSet1->___lwdiv
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0   18024
                                             24 COMRAM     2     2      0
                                              0 BANK0    108   108      0
                            ___lldiv
                            ___llmod
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                            _pwmInit
                            _pwmSet1
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             22 COMRAM     2     1      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    1020
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _ssdDigit
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      6C       5       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      66       1       80.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F2      15        0.0%
DATA                 0      0      F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 09 18:14:19 2020

                     l50 09CA                       l43 08EA                       l38 0848  
                     l57 0A44                       _v0 0064                       _v1 0063  
                     _v2 0062                       _v3 0061      ___wmul@multiplicand 0043  
                    l114 0F64                      l202 174C                      l212 1688  
                    l215 1450                      l304 1778                      l161 1792  
                    l209 13D8                      l242 1588                      l307 16EE  
                    l180 10D6                      l148 0D16                      l252 122E  
                    l341 12D2                      l181 10DE                      l334 12C2  
                    l255 1634                      l184 179C                      l272 1788  
                    l179 10BE                      l275 1710                      l197 1764  
                    l269 177A                      l278 17A4                      l295 1530  
                    l805 14C4                      l734 135A                      l727 134A  
                    l798 14BC                      _PR2 000FCB                      wreg 000FE8  
                   l2000 132A                     l2002 133A                     l2010 0638  
                   l2004 1344                     l2100 093C                     l2020 0654  
                   l2012 063C                     l2102 0950                     l2030 0712  
                   l2022 0658                     l2014 0640                     l2006 0612  
                   l2120 09B6                     l2104 095E                     l2040 07DE  
                   l2032 0764                     l2024 066A                     l2016 0644  
                   l2008 0634                     l2122 09BA                     l2114 097C  
                   l2106 0964                     l2050 0838                     l2034 07B6  
                   l2026 066E                     l2042 07E4                     l2018 0648  
                   l2140 0A30                     l2124 09D8                     l2116 099A  
                   l2108 0976                     l2052 083E                     l2060 0862  
                   l2044 0808                     l2036 07C2                     l2028 06C0  
                   l2142 0A34                     l2134 09F6                     l2126 09DE  
                   l2118 09A4                     l2070 0890                     l2062 0870  
                   l2054 0856                     l2046 081C                     l2038 07D8  
                   l2160 0AAA                     l2144 0A52                     l2136 0A14  
                   l2128 09F0                     l2064 0880                     l2072 0898  
                   l2048 082A                     l1610 174E                     l2162 0AAE  
                   l2154 0A70                     l2146 0A58                     l2138 0A1E  
                   l2074 08AA                     l2082 08BE                     l2066 0884  
                   l2090 08EA                     l2058 0860                     l1620 0D18  
                   l1700 0B18                     l2156 0A8E                     l2148 0A6A  
                   l2092 08F8                     l2084 08D0                     l2076 08AE  
                   l2068 088A                     l2164 0ABE                     l1630 0DA4  
                   l1622 0D34                     l1710 0BB2                     l1702 0B3A  
                   l2158 0A98                     l2094 090C                     l2086 08D4  
                   l2078 08B4                     l1616 1752                     l1640 0E36  
                   l1632 0DBE                     l1624 0D46                     l1720 0C46  
                   l1712 0BCE                     l1704 0B56                     l1800 176A  
                   l2096 091A                     l2088 08DA                     l1618 1754  
                   l1650 0ECE                     l1642 0E56                     l1634 0DDE  
                   l1626 0D66                     l1730 0CD0                     l1722 0C58  
                   l1714 0BE0                     l1706 0B68                     l1802 176E  
                   l1810 17A2                     l2098 092E                     l1652 0EF0  
                   l1644 0E78                     l1636 0E00                     l1628 0D88  
                   l1660 1732                     l1732 0CF4                     l1724 0C7C  
                   l1716 0C04                     l1708 0B8C                     l1740 1452  
                   l1804 15E0                     l2196 1208                     l1900 1198  
                   l1820 170A                     l1812 16F0                     l1654 0F0C  
                   l1646 0E94                     l1638 0E1C                     l1670 173C  
                   l1726 0CA2                     l1718 0C2A                     l1750 148A  
                   l1742 145A                     l1734 16CA                     l1806 1630  
                   l1910 11EC                     l1902 11AA                     l1822 170E  
                   l1814 16FA                     l1824 0F66                     l1656 0F26  
                   l1648 0EAE                     l1680 137E                     l1672 135E  
                   l1728 0CBE                     l1760 14B6                     l1752 1490  
                   l1744 146C                     l1736 16E6                     l1904 11BE  
                   l1808 179E                     l1816 16FE                     l1842 0FBC  
                   l1834 0F72                     l1826 0F6A                     l1658 0F46  
                   l1666 1736                     l1690 13CC                     l1682 1392  
                   l1674 1362                     l1770 140E                     l1762 13DA  
                   l1754 14A6                     l1746 1474                     l1930 155C  
                   l1922 1534                     l1906 11C6                     l1818 1706  
                   l1860 1072                     l1852 0FE0                     l1844 0FC0  
                   l1836 0FB4                     l1828 0F6E                     l1668 173A  
                   l1692 13D4                     l1684 13A6                     l1676 1366  
                   l1780 1424                     l1772 1412                     l1764 1402  
                   l1756 14AE                     l1748 147C                     l1940 14E6  
                   l1932 156E                     l1924 1544                     l1908 11D8  
                   l1916 11F4                     l1870 10B2                     l1862 1082  
                   l1854 100C                     l1846 0FDC                     l1950 1638  
                   l1686 13AA                     l1678 137A                     l1694 0ACA  
                   l1790 143E                     l1782 1428                     l1774 1416  
                   l1766 1406                     l1758 14B0                     l1942 1502  
                   l1934 1572                     l1926 1548                     l1872 10B6  
                   l1864 1084                     l1856 103C                     l1960 166C  
                   l1952 163C                     l1688 13BC                     l1696 0AE6  
                   l1792 1444                     l1784 142E                     l1776 141A  
                   l1768 140A                     l1944 150A                     l1936 1584  
                   l1928 1558                     l1880 10E4                     l1970 1240  
                   l1874 10CE                     l1866 1094                     l1858 1070  
                   l1962 1680                     l1954 1640                     l1698 0AF8  
                   l1794 144A                     l1786 1432                     l1778 1420  
                   l1946 1522                     l1938 14C8                     l1890 114E  
                   l1882 10F8                     l1980 1282                     l1972 1256  
                   l1876 10DA                     l1868 10AC                     l1796 1794  
                   l1948 178A                     l1964 1684                     l1956 1654  
                   l1788 1438                     l1892 1162                     l1884 110C  
                   l1982 12A0                     l1974 125E                     l1990 12D4  
                   l1958 1658                     l1798 1766                     l1894 116A  
                   l1886 1120                     l1878 10E0                     l1966 177A  
                   l1984 12B0                     l1976 126A                     l1968 1230  
                   l1992 12EA                     l1896 117C                     l1888 113C  
                   l1986 12B2                     l1978 1278                     l1994 12F2  
                   l1898 1190                     l1988 12BC                     l1996 12FE  
                   l1998 130C                     u1100 0DBE                     u1101 0DBA  
                   u1040 1764                     u1041 1760                     u1210 0F0C  
                   u1130 0E1C                     u1114 0DD0                     u1050 0D34  
                   u1211 0F08                     u1131 0E18                     u1115 0DCC  
                   u1051 0D30                     u1220 0F26                     u1204 0EE0  
                   u1140 0E36                     u1124 0DF0                     u1060 0D46  
                   u1221 0F22                     u1205 0EDC                     u1141 0E32  
                   u1125 0DEC                     u1061 0D42                     u1400 0C46  
                   u1320 0B56                     u1304 0B0A                     u1401 0C42  
                   u1321 0B52                     u1305 0B06                     u1234 0F38  
                   u1170 0E94                     u1154 0E48                     u1090 0DA4  
                   u1074 0D58                     u1250 174C                     u1410 0C58  
                   u1330 0B68                     u1314 0B2A                     u1235 0F34  
                   u1171 0E90                     u1155 0E44                     u1091 0DA0  
                   u1075 0D54                     u1251 1748                     u1411 0C54  
                   u1331 0B64                     u1315 0B26                     u1244 0F58  
                   u1180 0EAE                     u1164 0E68                     u1084 0D78  
                   u1260 13BC                     u1500 14A6                     u1245 0F54  
                   u1181 0EAA                     u1165 0E64                     u1085 0D74  
                   u1261 13B8                     u1501 14A2                     u1270 13CC  
                   u1271 13C8                     u1600 10AC                     u1440 0CBE  
                   u1424 0C6E                     u1360 0BCE                     u1344 0B7E  
                   u1280 0AE6                     u1601 10A8                     u1441 0CBA  
                   u1425 0C6A                     u1361 0BCA                     u1345 0B7A  
                   u1281 0AE2                     u1610 10CE                     u1530 0FDC  
                   u1514 0F88                     u1194 0EC0                     u1450 0CD0  
                   u1434 0C92                     u1370 0BE0                     u1354 0BA2  
                   u1290 0AF8                     u1611 10CA                     u1531 0FD8  
                   u1515 0F84                     u1195 0EBC                     u1451 0CCC  
                   u1435 0C8E                     u1371 0BDC                     u1355 0B9E  
                   u1291 0AF4                     u1700 12EA                     u1524 0FA8  
                   u1620 1544                     u1701 12E6                     u1525 0FA4  
                   u1621 1540                     u1710 130C                     u1550 100C  
                   u1630 1558                     u1711 1308                     u1551 1008  
                   u1631 1554                     u1720 132A                     u1544 0FF2  
                   u1464 0CE6                     u1384 0BF6                     u1480 146C  
                   u1640 156E                     u1800 0880                     u1721 1326  
                   u1545 0FEE                     u1465 0CE2                     u1385 0BF2  
                   u1481 1468                     u1641 156A                     u1801 087C  
                   u1474 0D0A                     u1394 0C1A                     u1490 148A  
                   u1650 1584                     u1810 08AA                     u1730 066A  
                   u1475 0D06                     u1395 0C16                     u1491 1486  
                   u1651 1580                     u1811 08A6                     u1731 0666  
                   u1580 1082                     u1564 102A                     u1660 1788  
                   u1900 09D8                     u1820 08D0                     u1740 07D8  
                   u1581 107E                     u1565 1024                     u1661 1784  
                   u1901 09D4                     u1821 08CC                     u1741 07D4  
                   u1670 1256                     u1590 1094                     u1574 105A  
                   u1830 08F8                     u1750 0808                     u1671 1252  
                   u1591 1090                     u1575 1054                     u1911 09E8  
                   u1831 08F4                     u1751 0804                     u1680 1278  
                   u1920 0A14                     u1840 091A                     u1760 082A  
                   u1681 1274                     u1921 0A10                     u1841 0916  
                   u1761 0826                     u1690 12A0                     u1930 0A44  
                   u1850 093C                     u1770 0838                     u1691 129C  
                   u1931 0A40                     u1851 0938                     u1771 0834  
                   u1940 0A52                     u1860 095E                     u1780 0856  
                   u1941 0A4E                     u1861 095A                     u1781 0852  
                   u1790 0870                     u1951 0A62                     u1871 096E  
                   u1791 086C                     u1960 0A8E                     u1880 099A  
                   u1961 0A8A                     u1881 0996                     u1970 0ABE  
                   u1890 09CA                     u1971 0ABA                     u1891 09C6  
                   _main 0612                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 0041  
        __end_of___lldiv 12D4                    _T0CON 000FD5          __end_of___llmod 135C  
                  _T2CON 000FCA          __end_of___lwdiv 14C6                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 168A  
        __end_of_lcdInit 1452          __end_of_pinMode 0D18                    _valor 005F  
                  main@i 00EB             main@timerSSD 00E6                    tablat 000FF5  
        __end_of_ssdInit 1636          __end_of_pwmSet1 1532          __end_of_pwmInit 177A  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
       __end_of_Delay2ms 174E     __end_of_digitalWrite 0F66          __initialization 158A  
           __end_of_main 0ACA       __size_of_Delay40us 0018                   ??_main 0059  
          __activetblptr 000002         ___llmod@dividend 004E                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB                   _INTCON 000FF2          main@EstadoTimer 00E3  
                 ___wmul 16CA                ??___lldiv 0049                ??___llmod 0056  
              ??___lwdiv 0045                   _kpInit 1794                   _kpRead 178A  
    main@EstadoLuminaria 00E1                   clear_0 15D0                ??_lcdData 0047  
              ??_lcdInit 0049         __end_of_ssdDigit 158A             __pdataCOMRAM 0001  
              ??_pinMode 0045      main@EstadoVentoinha 00E4             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0047                ??_pwmSet1 0048                ??_pwmInit 0041  
      __end_of_Delay40us 1766  main@VelocidadeVentoinha 00E5               __accesstop 0080  
__end_of__initialization 15D6            ___rparam_used 000001              pinMode@type 0043  
         __pcstackCOMRAM 0041             __pidataBANK1 1712                ?_Delay2ms 0041  
  __size_of_digitalWrite 024E               _lcdCommand 135C                  ?___wmul 0041  
                ?_kpInit 0041                  ?_kpRead 0041                  _CCP1CON 000FBD  
                _CCP2CON 000FBA               _kpDebounce 0F66       __size_of_timerInit 0008  
     __size_of_timerWait 0010       __size_of_ssdUpdate 0150               ??_Delay2ms 0042  
           _digitalWrite 0D18                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 0057          kpDebounce@old_D 0046          kpDebounce@tempo 0066  
                ___lldiv 1230          __size_of___wmul 0026                  ___llmod 12D4  
                ___lwdiv 1452             __psmallconst 0600          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0058              ssdDigit@pos 0057  
                __pcinit 158A                  _lcdData 1636                  __ramtop 0600  
                _lcdInit 13DA                  __ptext0 0612                  __ptext1 177A  
                __ptext2 16F0                  __ptext3 179E                  __ptext4 10E0  
                __ptext5 15E0                  __ptext6 1532                  __ptext7 14C6  
                __ptext8 16CA                  __ptext9 1452                  _display 0065  
                _pinMode 0ACA                  _ssdInit 15E0                  _pwmSet1 14C6  
                _pwmInit 1766                Delay2ms@i 0042      kpDebounce@valorNovo 005D  
   end_of_initialization 15D6            __Lmediumconst 0000        __end_of_timerInit 17A6  
        ___lldiv@divisor 0045        __end_of_timerWait 178A        __end_of_ssdUpdate 1230  
        ___lldiv@counter 004D               ??_ssdDigit 0058                  postdec1 000FE5  
            ?_lcdCommand 0041                  postinc0 000FEE                  postinc2 000FDE  
             _timerReset 16F0              ?_kpDebounce 0041           _valor@ssd$F244 0601  
              _Delay40us 174E           __end_of___wmul 16F0            __pidataCOMRAM 168A  
         __end_of_kpInit 179E           __end_of_kpRead 1794   __end_of_valor@ssd$F244 0611  
    start_initialization 158A        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0041          ___llmod@divisor 0052  
        ___llmod@counter 0056                 ??___wmul 0045                 ??_kpInit 0041  
               ??_kpRead 0043              __pdataBANK1 0100              ?_timerReset 0041  
            __pbssCOMRAM 005B            __pcstackBANK0 0080               pinMode@pin 0041  
       ___lwdiv@dividend 0041                 ?___lldiv 0041        __size_of_ssdDigit 0058  
               ?___llmod 004E                 ?___lwdiv 0041                 ?_lcdData 0041  
               ?_lcdInit 0041            lcdCommand@cmd 0048              __smallconst 0600  
               ?_pinMode 0041                 ?_ssdInit 0041                 ?_pwmSet1 0041  
               ?_pwmInit 0041         ___lwdiv@quotient 0045      __size_of_timerReset 0022  
            ??_Delay40us 0041           ___wmul@product 0045             ??_lcdCommand 0047  
              main@F2391 0001                main@F2393 0100                main@F2389 0021  
              _timerInit 179E                _timerWait 177A                _ssdUpdate 10E0  
             pwmSet1@val 004B             ??_kpDebounce 0041                main@Tela1 0080  
      ___wmul@multiplier 0041                main@Tela2 00A0                main@Tela3 00C0  
        lcdCommand@old_D 0047    kpDebounce@valorAntigo 005B                 _Delay2ms 1732  
              main@tecla 00EA         timerReset@ciclos 0043                copy_data0 159E  
              copy_data1 15BE       __end_of_lcdCommand 13DA             lcdData@old_D 0048  
           lcdData@valor 0047       __end_of_kpDebounce 10E0                 __Hrparam 0000  
               __Lrparam 0000               ?_timerInit 0041               ?_timerWait 0041  
             ?_ssdUpdate 0041         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074          pwmSet1@porcento 004A         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E          ___lwdiv@divisor 0043  
        ___lwdiv@counter 0047                 __ptext10 1766                 __ptext11 13DA  
               __ptext20 0F66                 __ptext12 0ACA                 __ptext21 12D4  
               __ptext13 135C                 __ptext22 1230                 __ptext14 1732  
               __ptext15 1636                 __ptext16 0D18                 __ptext17 174E  
               __ptext18 178A                 __ptext19 1794         __size_of_ssdInit 0056  
       __size_of_pwmSet1 006C         __size_of_pwmInit 0014            __size_of_main 04B8  
             Delay40us@i 0041                 _ssdDigit 1532             ??_timerReset 0043  
               main@temp 00E2          timerReset@tempo 0041            ?_digitalWrite 0041  
      digitalWrite@value 0043         ___lldiv@dividend 0041       __end_of_timerReset 1712  
            ??_timerInit 0041              ??_timerWait 0041              ??_ssdUpdate 0047  
       ___lldiv@quotient 0049              kpDebounce@i 004A              kpDebounce@j 0049  
            kpDebounce@k 0047           ??_digitalWrite 0045          digitalWrite@pin 0041  
